// ============================================================================
//
// Copyright (c) 2006-2015, Talend Inc.
//
// This source code has been automatically generated by_Talend Open Studio for Data Integration
// / Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package wqd7005_alt_asstmnt.ecommerce_customer_analysis_0_1;

import routines.Numeric;
import routines.DataOperation;
import routines.TalendDataGenerator;
import routines.TalendStringUtil;
import routines.TalendString;
import routines.StringHandling;
import routines.Relational;
import routines.TalendDate;
import routines.Mathematical;
import routines.system.*;
import routines.system.api.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.math.BigDecimal;
import java.io.ByteArrayOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.util.Comparator;

@SuppressWarnings("unused")

/**
 * Job: ECommerce_Customer_Analysis Purpose: E-Commerce Customer Analysis<br>
 * Description: This is for Alt Assessment 1 of WQD7005 Data Mining. This task
 * require us to do data integration via Talend Data Integration and
 * pre-processing via Talend Data Preparation <br>
 * 
 * @author user@talend.com
 * @version 8.0.1.20211109_1610
 * @status
 */
public class ECommerce_Customer_Analysis implements TalendJob {

	protected static void logIgnoredError(String message, Throwable cause) {
		System.err.println(message);
		if (cause != null) {
			cause.printStackTrace();
		}

	}

	public final Object obj = new Object();

	// for transmiting parameters purpose
	private Object valueObject = null;

	public Object getValueObject() {
		return this.valueObject;
	}

	public void setValueObject(Object valueObject) {
		this.valueObject = valueObject;
	}

	private final static String defaultCharset = java.nio.charset.Charset.defaultCharset().name();

	private final static String utf8Charset = "UTF-8";

	// contains type for every context property
	public class PropertiesWithType extends java.util.Properties {
		private static final long serialVersionUID = 1L;
		private java.util.Map<String, String> propertyTypes = new java.util.HashMap<>();

		public PropertiesWithType(java.util.Properties properties) {
			super(properties);
		}

		public PropertiesWithType() {
			super();
		}

		public void setContextType(String key, String type) {
			propertyTypes.put(key, type);
		}

		public String getContextType(String key) {
			return propertyTypes.get(key);
		}
	}

	// create and load default properties
	private java.util.Properties defaultProps = new java.util.Properties();

	// create application properties with default
	public class ContextProperties extends PropertiesWithType {

		private static final long serialVersionUID = 1L;

		public ContextProperties(java.util.Properties properties) {
			super(properties);
		}

		public ContextProperties() {
			super();
		}

		public void synchronizeContext() {

		}

		// if the stored or passed value is "<TALEND_NULL>" string, it mean null
		public String getStringValue(String key) {
			String origin_value = this.getProperty(key);
			if (NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY.equals(origin_value)) {
				return null;
			}
			return origin_value;
		}

	}

	protected ContextProperties context = new ContextProperties(); // will be instanciated by MS.

	public ContextProperties getContext() {
		return this.context;
	}

	private final String jobVersion = "0.1";
	private final String jobName = "ECommerce_Customer_Analysis";
	private final String projectName = "WQD7005_ALT_ASSTMNT";
	public Integer errorCode = null;
	private String currentComponent = "";

	private final java.util.Map<String, Object> globalMap = new java.util.HashMap<String, Object>();
	private final static java.util.Map<String, Object> junitGlobalMap = new java.util.HashMap<String, Object>();

	private final java.util.Map<String, Long> start_Hash = new java.util.HashMap<String, Long>();
	private final java.util.Map<String, Long> end_Hash = new java.util.HashMap<String, Long>();
	private final java.util.Map<String, Boolean> ok_Hash = new java.util.HashMap<String, Boolean>();
	public final java.util.List<String[]> globalBuffer = new java.util.ArrayList<String[]>();

	// OSGi DataSource
	private final static String KEY_DB_DATASOURCES = "KEY_DB_DATASOURCES";

	private final static String KEY_DB_DATASOURCES_RAW = "KEY_DB_DATASOURCES_RAW";

	public void setDataSources(java.util.Map<String, javax.sql.DataSource> dataSources) {
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		for (java.util.Map.Entry<String, javax.sql.DataSource> dataSourceEntry : dataSources.entrySet()) {
			talendDataSources.put(dataSourceEntry.getKey(),
					new routines.system.TalendDataSource(dataSourceEntry.getValue()));
		}
		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}

	public void setDataSourceReferences(List serviceReferences) throws Exception {

		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		java.util.Map<String, javax.sql.DataSource> dataSources = new java.util.HashMap<String, javax.sql.DataSource>();

		for (java.util.Map.Entry<String, javax.sql.DataSource> entry : BundleUtils
				.getServices(serviceReferences, javax.sql.DataSource.class).entrySet()) {
			dataSources.put(entry.getKey(), entry.getValue());
			talendDataSources.put(entry.getKey(), new routines.system.TalendDataSource(entry.getValue()));
		}

		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}

	private final java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream();
	private final java.io.PrintStream errorMessagePS = new java.io.PrintStream(new java.io.BufferedOutputStream(baos));

	public String getExceptionStackTrace() {
		if ("failure".equals(this.getStatus())) {
			errorMessagePS.flush();
			return baos.toString();
		}
		return null;
	}

	private Exception exception;

	public Exception getException() {
		if ("failure".equals(this.getStatus())) {
			return this.exception;
		}
		return null;
	}

	private class TalendException extends Exception {

		private static final long serialVersionUID = 1L;

		private java.util.Map<String, Object> globalMap = null;
		private Exception e = null;
		private String currentComponent = null;
		private String virtualComponentName = null;

		public void setVirtualComponentName(String virtualComponentName) {
			this.virtualComponentName = virtualComponentName;
		}

		private TalendException(Exception e, String errorComponent, final java.util.Map<String, Object> globalMap) {
			this.currentComponent = errorComponent;
			this.globalMap = globalMap;
			this.e = e;
		}

		public Exception getException() {
			return this.e;
		}

		public String getCurrentComponent() {
			return this.currentComponent;
		}

		public String getExceptionCauseMessage(Exception e) {
			Throwable cause = e;
			String message = null;
			int i = 10;
			while (null != cause && 0 < i--) {
				message = cause.getMessage();
				if (null == message) {
					cause = cause.getCause();
				} else {
					break;
				}
			}
			if (null == message) {
				message = e.getClass().getName();
			}
			return message;
		}

		@Override
		public void printStackTrace() {
			if (!(e instanceof TalendException || e instanceof TDieException)) {
				if (virtualComponentName != null && currentComponent.indexOf(virtualComponentName + "_") == 0) {
					globalMap.put(virtualComponentName + "_ERROR_MESSAGE", getExceptionCauseMessage(e));
				}
				globalMap.put(currentComponent + "_ERROR_MESSAGE", getExceptionCauseMessage(e));
				System.err.println("Exception in component " + currentComponent + " (" + jobName + ")");
			}
			if (!(e instanceof TDieException)) {
				if (e instanceof TalendException) {
					e.printStackTrace();
				} else {
					e.printStackTrace();
					e.printStackTrace(errorMessagePS);
					ECommerce_Customer_Analysis.this.exception = e;
				}
			}
			if (!(e instanceof TalendException)) {
				try {
					for (java.lang.reflect.Method m : this.getClass().getEnclosingClass().getMethods()) {
						if (m.getName().compareTo(currentComponent + "_error") == 0) {
							m.invoke(ECommerce_Customer_Analysis.this, new Object[] { e, currentComponent, globalMap });
							break;
						}
					}

					if (!(e instanceof TDieException)) {
					}
				} catch (Exception e) {
					this.e.printStackTrace();
				}
			}
		}
	}

	public void tFileInputDelimited_1_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputDelimited_1_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tLogRow_1_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputDelimited_1_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tMap_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputDelimited_1_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tLogRow_4_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputDelimited_1_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tFileOutputDelimited_1_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputDelimited_1_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tFileInputDelimited_3_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputDelimited_3_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tLogRow_2_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputDelimited_3_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tFileInputDelimited_4_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputDelimited_4_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tLogRow_3_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputDelimited_4_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tAdvancedHash_CustLog_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputDelimited_3_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tAdvancedHash_CustSales_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputDelimited_4_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tFileInputDelimited_1_onSubJobError(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		resumeUtil.addLog("SYSTEM_LOG", "NODE:" + errorComponent, "", Thread.currentThread().getId() + "", "FATAL", "",
				exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception), "");

	}

	public void tFileInputDelimited_3_onSubJobError(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		resumeUtil.addLog("SYSTEM_LOG", "NODE:" + errorComponent, "", Thread.currentThread().getId() + "", "FATAL", "",
				exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception), "");

	}

	public void tFileInputDelimited_4_onSubJobError(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		resumeUtil.addLog("SYSTEM_LOG", "NODE:" + errorComponent, "", Thread.currentThread().getId() + "", "FATAL", "",
				exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception), "");

	}

	public static class CustInfoStruct implements routines.system.IPersistableRow<CustInfoStruct> {
		final static byte[] commonByteArrayLock_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis = new byte[0];
		static byte[] commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis = new byte[0];
		protected static final int DEFAULT_HASHCODE = 1;
		protected static final int PRIME = 31;
		protected int hashCode = DEFAULT_HASHCODE;
		public boolean hashCodeDirty = true;

		public String loopKey;

		public int Customer_id;

		public int getCustomer_id() {
			return this.Customer_id;
		}

		public Integer Age;

		public Integer getAge() {
			return this.Age;
		}

		public Boolean Gender;

		public Boolean getGender() {
			return this.Gender;
		}

		public String Location;

		public String getLocation() {
			return this.Location;
		}

		public String MembershipLevel;

		public String getMembershipLevel() {
			return this.MembershipLevel;
		}

		public Integer Time_Spent;

		public Integer getTime_Spent() {
			return this.Time_Spent;
		}

		public Boolean Browser;

		public Boolean getBrowser() {
			return this.Browser;
		}

		public Boolean Newsletter;

		public Boolean getNewsletter() {
			return this.Newsletter;
		}

		public Boolean Voucher;

		public Boolean getVoucher() {
			return this.Voucher;
		}

		public Boolean Churn;

		public Boolean getChurn() {
			return this.Churn;
		}

		public Double Revenue_Total;

		public Double getRevenue_Total() {
			return this.Revenue_Total;
		}

		public Integer N_Purchases;

		public Integer getN_Purchases() {
			return this.N_Purchases;
		}

		public java.util.Date Purchase_DATE;

		public java.util.Date getPurchase_DATE() {
			return this.Purchase_DATE;
		}

		public Float Purchase_VALUE;

		public Float getPurchase_VALUE() {
			return this.Purchase_VALUE;
		}

		public String Pay_Method;

		public String getPay_Method() {
			return this.Pay_Method;
		}

		public String Most_Purchased;

		public String getMost_Purchased() {
			return this.Most_Purchased;
		}

		@Override
		public int hashCode() {
			if (this.hashCodeDirty) {
				final int prime = PRIME;
				int result = DEFAULT_HASHCODE;

				result = prime * result + (int) this.Customer_id;

				this.hashCode = result;
				this.hashCodeDirty = false;
			}
			return this.hashCode;
		}

		@Override
		public boolean equals(Object obj) {
			if (this == obj)
				return true;
			if (obj == null)
				return false;
			if (getClass() != obj.getClass())
				return false;
			final CustInfoStruct other = (CustInfoStruct) obj;

			if (this.Customer_id != other.Customer_id)
				return false;

			return true;
		}

		public void copyDataTo(CustInfoStruct other) {

			other.Customer_id = this.Customer_id;
			other.Age = this.Age;
			other.Gender = this.Gender;
			other.Location = this.Location;
			other.MembershipLevel = this.MembershipLevel;
			other.Time_Spent = this.Time_Spent;
			other.Browser = this.Browser;
			other.Newsletter = this.Newsletter;
			other.Voucher = this.Voucher;
			other.Churn = this.Churn;
			other.Revenue_Total = this.Revenue_Total;
			other.N_Purchases = this.N_Purchases;
			other.Purchase_DATE = this.Purchase_DATE;
			other.Purchase_VALUE = this.Purchase_VALUE;
			other.Pay_Method = this.Pay_Method;
			other.Most_Purchased = this.Most_Purchased;

		}

		public void copyKeysDataTo(CustInfoStruct other) {

			other.Customer_id = this.Customer_id;

		}

		private Integer readInteger(ObjectInputStream dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (intNum == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeInt(intNum);
			}
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis.length) {
					if (length < 1024 && commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis.length == 0) {
						commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis = new byte[1024];
					} else {
						commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis, 0, length);
				strReturn = new String(commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis, 0, length,
						utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis.length) {
					if (length < 1024 && commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis.length == 0) {
						commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis = new byte[1024];
					} else {
						commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis, 0, length);
				strReturn = new String(commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis, 0, length,
						utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		private java.util.Date readDate(ObjectInputStream dis) throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(dis.readLong());
			}
			return dateReturn;
		}

		private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = unmarshaller.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(unmarshaller.readLong());
			}
			return dateReturn;
		}

		private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException {
			if (date1 == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeLong(date1.getTime());
			}
		}

		private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (date1 == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeLong(date1.getTime());
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis) {

				try {

					int length = 0;

					this.Customer_id = dis.readInt();

					this.Age = readInteger(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Gender = null;
					} else {
						this.Gender = dis.readBoolean();
					}

					this.Location = readString(dis);

					this.MembershipLevel = readString(dis);

					this.Time_Spent = readInteger(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Browser = null;
					} else {
						this.Browser = dis.readBoolean();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Newsletter = null;
					} else {
						this.Newsletter = dis.readBoolean();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Voucher = null;
					} else {
						this.Voucher = dis.readBoolean();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Churn = null;
					} else {
						this.Churn = dis.readBoolean();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Revenue_Total = null;
					} else {
						this.Revenue_Total = dis.readDouble();
					}

					this.N_Purchases = readInteger(dis);

					this.Purchase_DATE = readDate(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Purchase_VALUE = null;
					} else {
						this.Purchase_VALUE = dis.readFloat();
					}

					this.Pay_Method = readString(dis);

					this.Most_Purchased = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis) {

				try {

					int length = 0;

					this.Customer_id = dis.readInt();

					this.Age = readInteger(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Gender = null;
					} else {
						this.Gender = dis.readBoolean();
					}

					this.Location = readString(dis);

					this.MembershipLevel = readString(dis);

					this.Time_Spent = readInteger(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Browser = null;
					} else {
						this.Browser = dis.readBoolean();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Newsletter = null;
					} else {
						this.Newsletter = dis.readBoolean();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Voucher = null;
					} else {
						this.Voucher = dis.readBoolean();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Churn = null;
					} else {
						this.Churn = dis.readBoolean();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Revenue_Total = null;
					} else {
						this.Revenue_Total = dis.readDouble();
					}

					this.N_Purchases = readInteger(dis);

					this.Purchase_DATE = readDate(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Purchase_VALUE = null;
					} else {
						this.Purchase_VALUE = dis.readFloat();
					}

					this.Pay_Method = readString(dis);

					this.Most_Purchased = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// int

				dos.writeInt(this.Customer_id);

				// Integer

				writeInteger(this.Age, dos);

				// Boolean

				if (this.Gender == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeBoolean(this.Gender);
				}

				// String

				writeString(this.Location, dos);

				// String

				writeString(this.MembershipLevel, dos);

				// Integer

				writeInteger(this.Time_Spent, dos);

				// Boolean

				if (this.Browser == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeBoolean(this.Browser);
				}

				// Boolean

				if (this.Newsletter == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeBoolean(this.Newsletter);
				}

				// Boolean

				if (this.Voucher == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeBoolean(this.Voucher);
				}

				// Boolean

				if (this.Churn == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeBoolean(this.Churn);
				}

				// Double

				if (this.Revenue_Total == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeDouble(this.Revenue_Total);
				}

				// Integer

				writeInteger(this.N_Purchases, dos);

				// java.util.Date

				writeDate(this.Purchase_DATE, dos);

				// Float

				if (this.Purchase_VALUE == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Purchase_VALUE);
				}

				// String

				writeString(this.Pay_Method, dos);

				// String

				writeString(this.Most_Purchased, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// int

				dos.writeInt(this.Customer_id);

				// Integer

				writeInteger(this.Age, dos);

				// Boolean

				if (this.Gender == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeBoolean(this.Gender);
				}

				// String

				writeString(this.Location, dos);

				// String

				writeString(this.MembershipLevel, dos);

				// Integer

				writeInteger(this.Time_Spent, dos);

				// Boolean

				if (this.Browser == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeBoolean(this.Browser);
				}

				// Boolean

				if (this.Newsletter == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeBoolean(this.Newsletter);
				}

				// Boolean

				if (this.Voucher == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeBoolean(this.Voucher);
				}

				// Boolean

				if (this.Churn == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeBoolean(this.Churn);
				}

				// Double

				if (this.Revenue_Total == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeDouble(this.Revenue_Total);
				}

				// Integer

				writeInteger(this.N_Purchases, dos);

				// java.util.Date

				writeDate(this.Purchase_DATE, dos);

				// Float

				if (this.Purchase_VALUE == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Purchase_VALUE);
				}

				// String

				writeString(this.Pay_Method, dos);

				// String

				writeString(this.Most_Purchased, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Customer_id=" + String.valueOf(Customer_id));
			sb.append(",Age=" + String.valueOf(Age));
			sb.append(",Gender=" + String.valueOf(Gender));
			sb.append(",Location=" + Location);
			sb.append(",MembershipLevel=" + MembershipLevel);
			sb.append(",Time_Spent=" + String.valueOf(Time_Spent));
			sb.append(",Browser=" + String.valueOf(Browser));
			sb.append(",Newsletter=" + String.valueOf(Newsletter));
			sb.append(",Voucher=" + String.valueOf(Voucher));
			sb.append(",Churn=" + String.valueOf(Churn));
			sb.append(",Revenue_Total=" + String.valueOf(Revenue_Total));
			sb.append(",N_Purchases=" + String.valueOf(N_Purchases));
			sb.append(",Purchase_DATE=" + String.valueOf(Purchase_DATE));
			sb.append(",Purchase_VALUE=" + String.valueOf(Purchase_VALUE));
			sb.append(",Pay_Method=" + Pay_Method);
			sb.append(",Most_Purchased=" + Most_Purchased);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(CustInfoStruct other) {

			int returnValue = -1;

			returnValue = checkNullsAndCompare(this.Customer_id, other.Customer_id);
			if (returnValue != 0) {
				return returnValue;
			}

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class CustInfoMergeStruct implements routines.system.IPersistableRow<CustInfoMergeStruct> {
		final static byte[] commonByteArrayLock_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis = new byte[0];
		static byte[] commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis = new byte[0];
		protected static final int DEFAULT_HASHCODE = 1;
		protected static final int PRIME = 31;
		protected int hashCode = DEFAULT_HASHCODE;
		public boolean hashCodeDirty = true;

		public String loopKey;

		public int Customer_id;

		public int getCustomer_id() {
			return this.Customer_id;
		}

		public Integer Age;

		public Integer getAge() {
			return this.Age;
		}

		public Boolean Gender;

		public Boolean getGender() {
			return this.Gender;
		}

		public String Location;

		public String getLocation() {
			return this.Location;
		}

		public String MembershipLevel;

		public String getMembershipLevel() {
			return this.MembershipLevel;
		}

		public Integer Time_Spent;

		public Integer getTime_Spent() {
			return this.Time_Spent;
		}

		public Boolean Browser;

		public Boolean getBrowser() {
			return this.Browser;
		}

		public Boolean Newsletter;

		public Boolean getNewsletter() {
			return this.Newsletter;
		}

		public Boolean Voucher;

		public Boolean getVoucher() {
			return this.Voucher;
		}

		public Boolean Churn;

		public Boolean getChurn() {
			return this.Churn;
		}

		public Double Revenue_Total;

		public Double getRevenue_Total() {
			return this.Revenue_Total;
		}

		public Integer N_Purchases;

		public Integer getN_Purchases() {
			return this.N_Purchases;
		}

		public java.util.Date Purchase_DATE;

		public java.util.Date getPurchase_DATE() {
			return this.Purchase_DATE;
		}

		public Float Purchase_VALUE;

		public Float getPurchase_VALUE() {
			return this.Purchase_VALUE;
		}

		public String Pay_Method;

		public String getPay_Method() {
			return this.Pay_Method;
		}

		public String Most_Purchased;

		public String getMost_Purchased() {
			return this.Most_Purchased;
		}

		@Override
		public int hashCode() {
			if (this.hashCodeDirty) {
				final int prime = PRIME;
				int result = DEFAULT_HASHCODE;

				result = prime * result + (int) this.Customer_id;

				this.hashCode = result;
				this.hashCodeDirty = false;
			}
			return this.hashCode;
		}

		@Override
		public boolean equals(Object obj) {
			if (this == obj)
				return true;
			if (obj == null)
				return false;
			if (getClass() != obj.getClass())
				return false;
			final CustInfoMergeStruct other = (CustInfoMergeStruct) obj;

			if (this.Customer_id != other.Customer_id)
				return false;

			return true;
		}

		public void copyDataTo(CustInfoMergeStruct other) {

			other.Customer_id = this.Customer_id;
			other.Age = this.Age;
			other.Gender = this.Gender;
			other.Location = this.Location;
			other.MembershipLevel = this.MembershipLevel;
			other.Time_Spent = this.Time_Spent;
			other.Browser = this.Browser;
			other.Newsletter = this.Newsletter;
			other.Voucher = this.Voucher;
			other.Churn = this.Churn;
			other.Revenue_Total = this.Revenue_Total;
			other.N_Purchases = this.N_Purchases;
			other.Purchase_DATE = this.Purchase_DATE;
			other.Purchase_VALUE = this.Purchase_VALUE;
			other.Pay_Method = this.Pay_Method;
			other.Most_Purchased = this.Most_Purchased;

		}

		public void copyKeysDataTo(CustInfoMergeStruct other) {

			other.Customer_id = this.Customer_id;

		}

		private Integer readInteger(ObjectInputStream dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (intNum == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeInt(intNum);
			}
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis.length) {
					if (length < 1024 && commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis.length == 0) {
						commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis = new byte[1024];
					} else {
						commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis, 0, length);
				strReturn = new String(commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis, 0, length,
						utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis.length) {
					if (length < 1024 && commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis.length == 0) {
						commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis = new byte[1024];
					} else {
						commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis, 0, length);
				strReturn = new String(commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis, 0, length,
						utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		private java.util.Date readDate(ObjectInputStream dis) throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(dis.readLong());
			}
			return dateReturn;
		}

		private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = unmarshaller.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(unmarshaller.readLong());
			}
			return dateReturn;
		}

		private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException {
			if (date1 == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeLong(date1.getTime());
			}
		}

		private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (date1 == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeLong(date1.getTime());
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis) {

				try {

					int length = 0;

					this.Customer_id = dis.readInt();

					this.Age = readInteger(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Gender = null;
					} else {
						this.Gender = dis.readBoolean();
					}

					this.Location = readString(dis);

					this.MembershipLevel = readString(dis);

					this.Time_Spent = readInteger(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Browser = null;
					} else {
						this.Browser = dis.readBoolean();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Newsletter = null;
					} else {
						this.Newsletter = dis.readBoolean();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Voucher = null;
					} else {
						this.Voucher = dis.readBoolean();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Churn = null;
					} else {
						this.Churn = dis.readBoolean();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Revenue_Total = null;
					} else {
						this.Revenue_Total = dis.readDouble();
					}

					this.N_Purchases = readInteger(dis);

					this.Purchase_DATE = readDate(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Purchase_VALUE = null;
					} else {
						this.Purchase_VALUE = dis.readFloat();
					}

					this.Pay_Method = readString(dis);

					this.Most_Purchased = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis) {

				try {

					int length = 0;

					this.Customer_id = dis.readInt();

					this.Age = readInteger(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Gender = null;
					} else {
						this.Gender = dis.readBoolean();
					}

					this.Location = readString(dis);

					this.MembershipLevel = readString(dis);

					this.Time_Spent = readInteger(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Browser = null;
					} else {
						this.Browser = dis.readBoolean();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Newsletter = null;
					} else {
						this.Newsletter = dis.readBoolean();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Voucher = null;
					} else {
						this.Voucher = dis.readBoolean();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Churn = null;
					} else {
						this.Churn = dis.readBoolean();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Revenue_Total = null;
					} else {
						this.Revenue_Total = dis.readDouble();
					}

					this.N_Purchases = readInteger(dis);

					this.Purchase_DATE = readDate(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Purchase_VALUE = null;
					} else {
						this.Purchase_VALUE = dis.readFloat();
					}

					this.Pay_Method = readString(dis);

					this.Most_Purchased = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// int

				dos.writeInt(this.Customer_id);

				// Integer

				writeInteger(this.Age, dos);

				// Boolean

				if (this.Gender == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeBoolean(this.Gender);
				}

				// String

				writeString(this.Location, dos);

				// String

				writeString(this.MembershipLevel, dos);

				// Integer

				writeInteger(this.Time_Spent, dos);

				// Boolean

				if (this.Browser == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeBoolean(this.Browser);
				}

				// Boolean

				if (this.Newsletter == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeBoolean(this.Newsletter);
				}

				// Boolean

				if (this.Voucher == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeBoolean(this.Voucher);
				}

				// Boolean

				if (this.Churn == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeBoolean(this.Churn);
				}

				// Double

				if (this.Revenue_Total == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeDouble(this.Revenue_Total);
				}

				// Integer

				writeInteger(this.N_Purchases, dos);

				// java.util.Date

				writeDate(this.Purchase_DATE, dos);

				// Float

				if (this.Purchase_VALUE == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Purchase_VALUE);
				}

				// String

				writeString(this.Pay_Method, dos);

				// String

				writeString(this.Most_Purchased, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// int

				dos.writeInt(this.Customer_id);

				// Integer

				writeInteger(this.Age, dos);

				// Boolean

				if (this.Gender == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeBoolean(this.Gender);
				}

				// String

				writeString(this.Location, dos);

				// String

				writeString(this.MembershipLevel, dos);

				// Integer

				writeInteger(this.Time_Spent, dos);

				// Boolean

				if (this.Browser == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeBoolean(this.Browser);
				}

				// Boolean

				if (this.Newsletter == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeBoolean(this.Newsletter);
				}

				// Boolean

				if (this.Voucher == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeBoolean(this.Voucher);
				}

				// Boolean

				if (this.Churn == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeBoolean(this.Churn);
				}

				// Double

				if (this.Revenue_Total == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeDouble(this.Revenue_Total);
				}

				// Integer

				writeInteger(this.N_Purchases, dos);

				// java.util.Date

				writeDate(this.Purchase_DATE, dos);

				// Float

				if (this.Purchase_VALUE == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Purchase_VALUE);
				}

				// String

				writeString(this.Pay_Method, dos);

				// String

				writeString(this.Most_Purchased, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Customer_id=" + String.valueOf(Customer_id));
			sb.append(",Age=" + String.valueOf(Age));
			sb.append(",Gender=" + String.valueOf(Gender));
			sb.append(",Location=" + Location);
			sb.append(",MembershipLevel=" + MembershipLevel);
			sb.append(",Time_Spent=" + String.valueOf(Time_Spent));
			sb.append(",Browser=" + String.valueOf(Browser));
			sb.append(",Newsletter=" + String.valueOf(Newsletter));
			sb.append(",Voucher=" + String.valueOf(Voucher));
			sb.append(",Churn=" + String.valueOf(Churn));
			sb.append(",Revenue_Total=" + String.valueOf(Revenue_Total));
			sb.append(",N_Purchases=" + String.valueOf(N_Purchases));
			sb.append(",Purchase_DATE=" + String.valueOf(Purchase_DATE));
			sb.append(",Purchase_VALUE=" + String.valueOf(Purchase_VALUE));
			sb.append(",Pay_Method=" + Pay_Method);
			sb.append(",Most_Purchased=" + Most_Purchased);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(CustInfoMergeStruct other) {

			int returnValue = -1;

			returnValue = checkNullsAndCompare(this.Customer_id, other.Customer_id);
			if (returnValue != 0) {
				return returnValue;
			}

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class CustDetailsStruct implements routines.system.IPersistableRow<CustDetailsStruct> {
		final static byte[] commonByteArrayLock_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis = new byte[0];
		static byte[] commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis = new byte[0];

		public int Customer_id;

		public int getCustomer_id() {
			return this.Customer_id;
		}

		public Integer Age;

		public Integer getAge() {
			return this.Age;
		}

		public Boolean Gender;

		public Boolean getGender() {
			return this.Gender;
		}

		public String Location;

		public String getLocation() {
			return this.Location;
		}

		public String MembershipLevel;

		public String getMembershipLevel() {
			return this.MembershipLevel;
		}

		private Integer readInteger(ObjectInputStream dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (intNum == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeInt(intNum);
			}
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis.length) {
					if (length < 1024 && commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis.length == 0) {
						commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis = new byte[1024];
					} else {
						commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis, 0, length);
				strReturn = new String(commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis, 0, length,
						utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis.length) {
					if (length < 1024 && commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis.length == 0) {
						commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis = new byte[1024];
					} else {
						commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis, 0, length);
				strReturn = new String(commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis, 0, length,
						utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis) {

				try {

					int length = 0;

					this.Customer_id = dis.readInt();

					this.Age = readInteger(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Gender = null;
					} else {
						this.Gender = dis.readBoolean();
					}

					this.Location = readString(dis);

					this.MembershipLevel = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis) {

				try {

					int length = 0;

					this.Customer_id = dis.readInt();

					this.Age = readInteger(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Gender = null;
					} else {
						this.Gender = dis.readBoolean();
					}

					this.Location = readString(dis);

					this.MembershipLevel = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// int

				dos.writeInt(this.Customer_id);

				// Integer

				writeInteger(this.Age, dos);

				// Boolean

				if (this.Gender == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeBoolean(this.Gender);
				}

				// String

				writeString(this.Location, dos);

				// String

				writeString(this.MembershipLevel, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// int

				dos.writeInt(this.Customer_id);

				// Integer

				writeInteger(this.Age, dos);

				// Boolean

				if (this.Gender == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeBoolean(this.Gender);
				}

				// String

				writeString(this.Location, dos);

				// String

				writeString(this.MembershipLevel, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Customer_id=" + String.valueOf(Customer_id));
			sb.append(",Age=" + String.valueOf(Age));
			sb.append(",Gender=" + String.valueOf(Gender));
			sb.append(",Location=" + Location);
			sb.append(",MembershipLevel=" + MembershipLevel);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(CustDetailsStruct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class CustDetailsInputStruct implements routines.system.IPersistableRow<CustDetailsInputStruct> {
		final static byte[] commonByteArrayLock_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis = new byte[0];
		static byte[] commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis = new byte[0];
		protected static final int DEFAULT_HASHCODE = 1;
		protected static final int PRIME = 31;
		protected int hashCode = DEFAULT_HASHCODE;
		public boolean hashCodeDirty = true;

		public String loopKey;

		public int Customer_id;

		public int getCustomer_id() {
			return this.Customer_id;
		}

		public Integer Age;

		public Integer getAge() {
			return this.Age;
		}

		public Boolean Gender;

		public Boolean getGender() {
			return this.Gender;
		}

		public String Location;

		public String getLocation() {
			return this.Location;
		}

		public String MembershipLevel;

		public String getMembershipLevel() {
			return this.MembershipLevel;
		}

		@Override
		public int hashCode() {
			if (this.hashCodeDirty) {
				final int prime = PRIME;
				int result = DEFAULT_HASHCODE;

				result = prime * result + (int) this.Customer_id;

				this.hashCode = result;
				this.hashCodeDirty = false;
			}
			return this.hashCode;
		}

		@Override
		public boolean equals(Object obj) {
			if (this == obj)
				return true;
			if (obj == null)
				return false;
			if (getClass() != obj.getClass())
				return false;
			final CustDetailsInputStruct other = (CustDetailsInputStruct) obj;

			if (this.Customer_id != other.Customer_id)
				return false;

			return true;
		}

		public void copyDataTo(CustDetailsInputStruct other) {

			other.Customer_id = this.Customer_id;
			other.Age = this.Age;
			other.Gender = this.Gender;
			other.Location = this.Location;
			other.MembershipLevel = this.MembershipLevel;

		}

		public void copyKeysDataTo(CustDetailsInputStruct other) {

			other.Customer_id = this.Customer_id;

		}

		private Integer readInteger(ObjectInputStream dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (intNum == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeInt(intNum);
			}
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis.length) {
					if (length < 1024 && commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis.length == 0) {
						commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis = new byte[1024];
					} else {
						commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis, 0, length);
				strReturn = new String(commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis, 0, length,
						utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis.length) {
					if (length < 1024 && commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis.length == 0) {
						commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis = new byte[1024];
					} else {
						commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis, 0, length);
				strReturn = new String(commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis, 0, length,
						utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis) {

				try {

					int length = 0;

					this.Customer_id = dis.readInt();

					this.Age = readInteger(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Gender = null;
					} else {
						this.Gender = dis.readBoolean();
					}

					this.Location = readString(dis);

					this.MembershipLevel = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis) {

				try {

					int length = 0;

					this.Customer_id = dis.readInt();

					this.Age = readInteger(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Gender = null;
					} else {
						this.Gender = dis.readBoolean();
					}

					this.Location = readString(dis);

					this.MembershipLevel = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// int

				dos.writeInt(this.Customer_id);

				// Integer

				writeInteger(this.Age, dos);

				// Boolean

				if (this.Gender == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeBoolean(this.Gender);
				}

				// String

				writeString(this.Location, dos);

				// String

				writeString(this.MembershipLevel, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// int

				dos.writeInt(this.Customer_id);

				// Integer

				writeInteger(this.Age, dos);

				// Boolean

				if (this.Gender == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeBoolean(this.Gender);
				}

				// String

				writeString(this.Location, dos);

				// String

				writeString(this.MembershipLevel, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Customer_id=" + String.valueOf(Customer_id));
			sb.append(",Age=" + String.valueOf(Age));
			sb.append(",Gender=" + String.valueOf(Gender));
			sb.append(",Location=" + Location);
			sb.append(",MembershipLevel=" + MembershipLevel);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(CustDetailsInputStruct other) {

			int returnValue = -1;

			returnValue = checkNullsAndCompare(this.Customer_id, other.Customer_id);
			if (returnValue != 0) {
				return returnValue;
			}

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class after_tFileInputDelimited_1Struct
			implements routines.system.IPersistableRow<after_tFileInputDelimited_1Struct> {
		final static byte[] commonByteArrayLock_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis = new byte[0];
		static byte[] commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis = new byte[0];
		protected static final int DEFAULT_HASHCODE = 1;
		protected static final int PRIME = 31;
		protected int hashCode = DEFAULT_HASHCODE;
		public boolean hashCodeDirty = true;

		public String loopKey;

		public int Customer_id;

		public int getCustomer_id() {
			return this.Customer_id;
		}

		public Integer Age;

		public Integer getAge() {
			return this.Age;
		}

		public Boolean Gender;

		public Boolean getGender() {
			return this.Gender;
		}

		public String Location;

		public String getLocation() {
			return this.Location;
		}

		public String MembershipLevel;

		public String getMembershipLevel() {
			return this.MembershipLevel;
		}

		@Override
		public int hashCode() {
			if (this.hashCodeDirty) {
				final int prime = PRIME;
				int result = DEFAULT_HASHCODE;

				result = prime * result + (int) this.Customer_id;

				this.hashCode = result;
				this.hashCodeDirty = false;
			}
			return this.hashCode;
		}

		@Override
		public boolean equals(Object obj) {
			if (this == obj)
				return true;
			if (obj == null)
				return false;
			if (getClass() != obj.getClass())
				return false;
			final after_tFileInputDelimited_1Struct other = (after_tFileInputDelimited_1Struct) obj;

			if (this.Customer_id != other.Customer_id)
				return false;

			return true;
		}

		public void copyDataTo(after_tFileInputDelimited_1Struct other) {

			other.Customer_id = this.Customer_id;
			other.Age = this.Age;
			other.Gender = this.Gender;
			other.Location = this.Location;
			other.MembershipLevel = this.MembershipLevel;

		}

		public void copyKeysDataTo(after_tFileInputDelimited_1Struct other) {

			other.Customer_id = this.Customer_id;

		}

		private Integer readInteger(ObjectInputStream dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (intNum == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeInt(intNum);
			}
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis.length) {
					if (length < 1024 && commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis.length == 0) {
						commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis = new byte[1024];
					} else {
						commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis, 0, length);
				strReturn = new String(commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis, 0, length,
						utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis.length) {
					if (length < 1024 && commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis.length == 0) {
						commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis = new byte[1024];
					} else {
						commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis, 0, length);
				strReturn = new String(commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis, 0, length,
						utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis) {

				try {

					int length = 0;

					this.Customer_id = dis.readInt();

					this.Age = readInteger(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Gender = null;
					} else {
						this.Gender = dis.readBoolean();
					}

					this.Location = readString(dis);

					this.MembershipLevel = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis) {

				try {

					int length = 0;

					this.Customer_id = dis.readInt();

					this.Age = readInteger(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Gender = null;
					} else {
						this.Gender = dis.readBoolean();
					}

					this.Location = readString(dis);

					this.MembershipLevel = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// int

				dos.writeInt(this.Customer_id);

				// Integer

				writeInteger(this.Age, dos);

				// Boolean

				if (this.Gender == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeBoolean(this.Gender);
				}

				// String

				writeString(this.Location, dos);

				// String

				writeString(this.MembershipLevel, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// int

				dos.writeInt(this.Customer_id);

				// Integer

				writeInteger(this.Age, dos);

				// Boolean

				if (this.Gender == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeBoolean(this.Gender);
				}

				// String

				writeString(this.Location, dos);

				// String

				writeString(this.MembershipLevel, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Customer_id=" + String.valueOf(Customer_id));
			sb.append(",Age=" + String.valueOf(Age));
			sb.append(",Gender=" + String.valueOf(Gender));
			sb.append(",Location=" + Location);
			sb.append(",MembershipLevel=" + MembershipLevel);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(after_tFileInputDelimited_1Struct other) {

			int returnValue = -1;

			returnValue = checkNullsAndCompare(this.Customer_id, other.Customer_id);
			if (returnValue != 0) {
				return returnValue;
			}

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public void tFileInputDelimited_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
		globalMap.put("tFileInputDelimited_1_SUBPROCESS_STATE", 0);

		final boolean execStat = this.execStat;

		String iterateId = "";

		String currentComponent = "";
		java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

		try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { // start the resume
				globalResumeTicket = true;

				tFileInputDelimited_3Process(globalMap);
				tFileInputDelimited_4Process(globalMap);

				CustDetailsInputStruct CustDetailsInput = new CustDetailsInputStruct();
				CustDetailsInputStruct CustDetails = CustDetailsInput;
				CustInfoMergeStruct CustInfoMerge = new CustInfoMergeStruct();
				CustInfoMergeStruct CustInfo = CustInfoMerge;

				/**
				 * [tFileOutputDelimited_1 begin ] start
				 */

				ok_Hash.put("tFileOutputDelimited_1", false);
				start_Hash.put("tFileOutputDelimited_1", System.currentTimeMillis());

				currentComponent = "tFileOutputDelimited_1";

				int tos_count_tFileOutputDelimited_1 = 0;

				String fileName_tFileOutputDelimited_1 = "";
				fileName_tFileOutputDelimited_1 = (new java.io.File(
						"C:/Program Files (x86)/TOS_DI-8.0.1/studio/workspace/CustInfo.csv")).getAbsolutePath()
								.replace("\\", "/");
				String fullName_tFileOutputDelimited_1 = null;
				String extension_tFileOutputDelimited_1 = null;
				String directory_tFileOutputDelimited_1 = null;
				if ((fileName_tFileOutputDelimited_1.indexOf("/") != -1)) {
					if (fileName_tFileOutputDelimited_1.lastIndexOf(".") < fileName_tFileOutputDelimited_1
							.lastIndexOf("/")) {
						fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1;
						extension_tFileOutputDelimited_1 = "";
					} else {
						fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(0,
								fileName_tFileOutputDelimited_1.lastIndexOf("."));
						extension_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1
								.substring(fileName_tFileOutputDelimited_1.lastIndexOf("."));
					}
					directory_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(0,
							fileName_tFileOutputDelimited_1.lastIndexOf("/"));
				} else {
					if (fileName_tFileOutputDelimited_1.lastIndexOf(".") != -1) {
						fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(0,
								fileName_tFileOutputDelimited_1.lastIndexOf("."));
						extension_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1
								.substring(fileName_tFileOutputDelimited_1.lastIndexOf("."));
					} else {
						fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1;
						extension_tFileOutputDelimited_1 = "";
					}
					directory_tFileOutputDelimited_1 = "";
				}
				boolean isFileGenerated_tFileOutputDelimited_1 = true;
				java.io.File filetFileOutputDelimited_1 = new java.io.File(fileName_tFileOutputDelimited_1);
				globalMap.put("tFileOutputDelimited_1_FILE_NAME", fileName_tFileOutputDelimited_1);
				if (filetFileOutputDelimited_1.exists()) {
					throw new RuntimeException("The particular file \"" + filetFileOutputDelimited_1.getAbsoluteFile()
							+ "\" already exist. If you want to overwrite the file, please uncheck the"
							+ " \"Throw an error if the file already exist\" option in Advanced settings.");
				}
				int nb_line_tFileOutputDelimited_1 = 0;
				int splitedFileNo_tFileOutputDelimited_1 = 0;
				int currentRow_tFileOutputDelimited_1 = 0;

				final String OUT_DELIM_tFileOutputDelimited_1 = /** Start field tFileOutputDelimited_1:FIELDSEPARATOR */
						","/** End field tFileOutputDelimited_1:FIELDSEPARATOR */
				;

				final String OUT_DELIM_ROWSEP_tFileOutputDelimited_1 = /**
																		 * Start field
																		 * tFileOutputDelimited_1:ROWSEPARATOR
																		 */
						"\n"/** End field tFileOutputDelimited_1:ROWSEPARATOR */
				;

				// create directory only if not exists
				if (directory_tFileOutputDelimited_1 != null && directory_tFileOutputDelimited_1.trim().length() != 0) {
					java.io.File dir_tFileOutputDelimited_1 = new java.io.File(directory_tFileOutputDelimited_1);
					if (!dir_tFileOutputDelimited_1.exists()) {
						dir_tFileOutputDelimited_1.mkdirs();
					}
				}

				// routines.system.Row
				java.io.Writer outtFileOutputDelimited_1 = null;

				java.io.File fileToDelete_tFileOutputDelimited_1 = new java.io.File(fileName_tFileOutputDelimited_1);
				if (fileToDelete_tFileOutputDelimited_1.exists()) {
					fileToDelete_tFileOutputDelimited_1.delete();
				}
				outtFileOutputDelimited_1 = new java.io.BufferedWriter(new java.io.OutputStreamWriter(
						new java.io.FileOutputStream(fileName_tFileOutputDelimited_1, false), "ISO-8859-15"));
				if (filetFileOutputDelimited_1.length() == 0) {
					outtFileOutputDelimited_1.write("Customer_id");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("Age");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("Gender");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("Location");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("MembershipLevel");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("Time_Spent");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("Browser");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("Newsletter");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("Voucher");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("Churn");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("Revenue_Total");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("N_Purchases");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("Purchase_DATE");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("Purchase_VALUE");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("Pay_Method");
					outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.write("Most_Purchased");
					outtFileOutputDelimited_1.write(OUT_DELIM_ROWSEP_tFileOutputDelimited_1);
					outtFileOutputDelimited_1.flush();
				}

				resourceMap.put("out_tFileOutputDelimited_1", outtFileOutputDelimited_1);
				resourceMap.put("nb_line_tFileOutputDelimited_1", nb_line_tFileOutputDelimited_1);

				/**
				 * [tFileOutputDelimited_1 begin ] stop
				 */

				/**
				 * [tLogRow_4 begin ] start
				 */

				ok_Hash.put("tLogRow_4", false);
				start_Hash.put("tLogRow_4", System.currentTimeMillis());

				currentComponent = "tLogRow_4";

				int tos_count_tLogRow_4 = 0;

				///////////////////////

				final String OUTPUT_FIELD_SEPARATOR_tLogRow_4 = "|";
				java.io.PrintStream consoleOut_tLogRow_4 = null;

				StringBuilder strBuffer_tLogRow_4 = null;
				int nb_line_tLogRow_4 = 0;
///////////////////////    			

				/**
				 * [tLogRow_4 begin ] stop
				 */

				/**
				 * [tMap_1 begin ] start
				 */

				ok_Hash.put("tMap_1", false);
				start_Hash.put("tMap_1", System.currentTimeMillis());

				currentComponent = "tMap_1";

				int tos_count_tMap_1 = 0;

// ###############################
// # Lookup's keys initialization

				org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<CustLogStruct> tHash_Lookup_CustLog = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<CustLogStruct>) ((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<CustLogStruct>) globalMap
						.get("tHash_Lookup_CustLog"));

				CustLogStruct CustLogHashKey = new CustLogStruct();
				CustLogStruct CustLogDefault = new CustLogStruct();

				org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<CustSalesStruct> tHash_Lookup_CustSales = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<CustSalesStruct>) ((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<CustSalesStruct>) globalMap
						.get("tHash_Lookup_CustSales"));

				CustSalesStruct CustSalesHashKey = new CustSalesStruct();
				CustSalesStruct CustSalesDefault = new CustSalesStruct();
// ###############################        

// ###############################
// # Vars initialization
				class Var__tMap_1__Struct {
				}
				Var__tMap_1__Struct Var__tMap_1 = new Var__tMap_1__Struct();
// ###############################

// ###############################
// # Outputs initialization
				CustInfoMergeStruct CustInfoMerge_tmp = new CustInfoMergeStruct();
// ###############################

				/**
				 * [tMap_1 begin ] stop
				 */

				/**
				 * [tLogRow_1 begin ] start
				 */

				ok_Hash.put("tLogRow_1", false);
				start_Hash.put("tLogRow_1", System.currentTimeMillis());

				currentComponent = "tLogRow_1";

				int tos_count_tLogRow_1 = 0;

				///////////////////////

				final String OUTPUT_FIELD_SEPARATOR_tLogRow_1 = "|";
				java.io.PrintStream consoleOut_tLogRow_1 = null;

				StringBuilder strBuffer_tLogRow_1 = null;
				int nb_line_tLogRow_1 = 0;
///////////////////////    			

				/**
				 * [tLogRow_1 begin ] stop
				 */

				/**
				 * [tFileInputDelimited_1 begin ] start
				 */

				ok_Hash.put("tFileInputDelimited_1", false);
				start_Hash.put("tFileInputDelimited_1", System.currentTimeMillis());

				currentComponent = "tFileInputDelimited_1";

				int tos_count_tFileInputDelimited_1 = 0;

				final routines.system.RowState rowstate_tFileInputDelimited_1 = new routines.system.RowState();

				int nb_line_tFileInputDelimited_1 = 0;
				org.talend.fileprocess.FileInputDelimited fid_tFileInputDelimited_1 = null;
				int limit_tFileInputDelimited_1 = -1;
				try {

					Object filename_tFileInputDelimited_1 = "D:/Documents/UM - Master/Sem 3/WQD7005 Data Mining/AA1/CustDetails.csv";
					if (filename_tFileInputDelimited_1 instanceof java.io.InputStream) {

						int footer_value_tFileInputDelimited_1 = 0, random_value_tFileInputDelimited_1 = -1;
						if (footer_value_tFileInputDelimited_1 > 0 || random_value_tFileInputDelimited_1 > 0) {
							throw new java.lang.Exception(
									"When the input source is a stream,footer and random shouldn't be bigger than 0.");
						}

					}
					try {
						fid_tFileInputDelimited_1 = new org.talend.fileprocess.FileInputDelimited(
								"D:/Documents/UM - Master/Sem 3/WQD7005 Data Mining/AA1/CustDetails.csv", "ISO-8859-15",
								",", "\n", true, 1, 0, limit_tFileInputDelimited_1, -1, false);
					} catch (java.lang.Exception e) {
						globalMap.put("tFileInputDelimited_1_ERROR_MESSAGE", e.getMessage());

						System.err.println(e.getMessage());

					}

					while (fid_tFileInputDelimited_1 != null && fid_tFileInputDelimited_1.nextRecord()) {
						rowstate_tFileInputDelimited_1.reset();

						CustDetailsInput = null;

						boolean whetherReject_tFileInputDelimited_1 = false;
						CustDetailsInput = new CustDetailsInputStruct();
						try {

							int columnIndexWithD_tFileInputDelimited_1 = 0;

							String temp = "";

							columnIndexWithD_tFileInputDelimited_1 = 0;

							temp = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1);
							if (temp.length() > 0) {

								try {

									CustDetailsInput.Customer_id = ParserUtils.parseTo_int(temp);

								} catch (java.lang.Exception ex_tFileInputDelimited_1) {
									globalMap.put("tFileInputDelimited_1_ERROR_MESSAGE",
											ex_tFileInputDelimited_1.getMessage());
									rowstate_tFileInputDelimited_1.setException(new RuntimeException(String.format(
											"Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
											"Customer_id", "CustDetailsInput", temp, ex_tFileInputDelimited_1),
											ex_tFileInputDelimited_1));
								}

							} else {

								rowstate_tFileInputDelimited_1.setException(new RuntimeException(
										"Value is empty for column : 'Customer_id' in 'CustDetailsInput' connection, value is invalid or this column should be nullable or have a default value."));

							}

							columnIndexWithD_tFileInputDelimited_1 = 1;

							temp = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1);
							if (temp.length() > 0) {

								try {

									CustDetailsInput.Age = ParserUtils.parseTo_Integer(temp);

								} catch (java.lang.Exception ex_tFileInputDelimited_1) {
									globalMap.put("tFileInputDelimited_1_ERROR_MESSAGE",
											ex_tFileInputDelimited_1.getMessage());
									rowstate_tFileInputDelimited_1.setException(new RuntimeException(String.format(
											"Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
											"Age", "CustDetailsInput", temp, ex_tFileInputDelimited_1),
											ex_tFileInputDelimited_1));
								}

							} else {

								CustDetailsInput.Age = null;

							}

							columnIndexWithD_tFileInputDelimited_1 = 2;

							temp = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1);
							if (temp.length() > 0) {

								try {

									CustDetailsInput.Gender = ParserUtils.parseTo_Boolean(temp);

								} catch (java.lang.Exception ex_tFileInputDelimited_1) {
									globalMap.put("tFileInputDelimited_1_ERROR_MESSAGE",
											ex_tFileInputDelimited_1.getMessage());
									rowstate_tFileInputDelimited_1.setException(new RuntimeException(String.format(
											"Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
											"Gender", "CustDetailsInput", temp, ex_tFileInputDelimited_1),
											ex_tFileInputDelimited_1));
								}

							} else {

								CustDetailsInput.Gender = null;

							}

							columnIndexWithD_tFileInputDelimited_1 = 3;

							CustDetailsInput.Location = fid_tFileInputDelimited_1
									.get(columnIndexWithD_tFileInputDelimited_1);

							columnIndexWithD_tFileInputDelimited_1 = 4;

							CustDetailsInput.MembershipLevel = fid_tFileInputDelimited_1
									.get(columnIndexWithD_tFileInputDelimited_1);

							if (rowstate_tFileInputDelimited_1.getException() != null) {
								throw rowstate_tFileInputDelimited_1.getException();
							}

						} catch (java.lang.Exception e) {
							globalMap.put("tFileInputDelimited_1_ERROR_MESSAGE", e.getMessage());
							whetherReject_tFileInputDelimited_1 = true;

							System.err.println(e.getMessage());
							CustDetailsInput = null;

						}

						/**
						 * [tFileInputDelimited_1 begin ] stop
						 */

						/**
						 * [tFileInputDelimited_1 main ] start
						 */

						currentComponent = "tFileInputDelimited_1";

						tos_count_tFileInputDelimited_1++;

						/**
						 * [tFileInputDelimited_1 main ] stop
						 */

						/**
						 * [tFileInputDelimited_1 process_data_begin ] start
						 */

						currentComponent = "tFileInputDelimited_1";

						/**
						 * [tFileInputDelimited_1 process_data_begin ] stop
						 */
// Start of branch "CustDetailsInput"
						if (CustDetailsInput != null) {

							/**
							 * [tLogRow_1 main ] start
							 */

							currentComponent = "tLogRow_1";

///////////////////////		

							strBuffer_tLogRow_1 = new StringBuilder();

							strBuffer_tLogRow_1.append(String.valueOf(CustDetailsInput.Customer_id));

							strBuffer_tLogRow_1.append("|");

							if (CustDetailsInput.Age != null) { //

								strBuffer_tLogRow_1.append(String.valueOf(CustDetailsInput.Age));

							} //

							strBuffer_tLogRow_1.append("|");

							if (CustDetailsInput.Gender != null) { //

								strBuffer_tLogRow_1.append(String.valueOf(CustDetailsInput.Gender));

							} //

							strBuffer_tLogRow_1.append("|");

							if (CustDetailsInput.Location != null) { //

								strBuffer_tLogRow_1.append(String.valueOf(CustDetailsInput.Location));

							} //

							strBuffer_tLogRow_1.append("|");

							if (CustDetailsInput.MembershipLevel != null) { //

								strBuffer_tLogRow_1.append(String.valueOf(CustDetailsInput.MembershipLevel));

							} //

							if (globalMap.get("tLogRow_CONSOLE") != null) {
								consoleOut_tLogRow_1 = (java.io.PrintStream) globalMap.get("tLogRow_CONSOLE");
							} else {
								consoleOut_tLogRow_1 = new java.io.PrintStream(
										new java.io.BufferedOutputStream(System.out));
								globalMap.put("tLogRow_CONSOLE", consoleOut_tLogRow_1);
							}
							consoleOut_tLogRow_1.println(strBuffer_tLogRow_1.toString());
							consoleOut_tLogRow_1.flush();
							nb_line_tLogRow_1++;
//////

//////                    

///////////////////////    			

							CustDetails = CustDetailsInput;

							tos_count_tLogRow_1++;

							/**
							 * [tLogRow_1 main ] stop
							 */

							/**
							 * [tLogRow_1 process_data_begin ] start
							 */

							currentComponent = "tLogRow_1";

							/**
							 * [tLogRow_1 process_data_begin ] stop
							 */

							/**
							 * [tMap_1 main ] start
							 */

							currentComponent = "tMap_1";

							boolean hasCasePrimitiveKeyWithNull_tMap_1 = false;

							// ###############################
							// # Input tables (lookups)
							boolean rejectedInnerJoin_tMap_1 = false;
							boolean mainRowRejected_tMap_1 = false;

							///////////////////////////////////////////////
							// Starting Lookup Table "CustLog"
							///////////////////////////////////////////////

							boolean forceLoopCustLog = false;

							CustLogStruct CustLogObjectFromLookup = null;

							if (!rejectedInnerJoin_tMap_1) { // G_TM_M_020

								hasCasePrimitiveKeyWithNull_tMap_1 = false;

								Object exprKeyValue_CustLog__Customer_id = CustDetails.Customer_id;
								if (exprKeyValue_CustLog__Customer_id == null) {
									hasCasePrimitiveKeyWithNull_tMap_1 = true;
								} else {
									CustLogHashKey.Customer_id = (int) (Integer) exprKeyValue_CustLog__Customer_id;
								}

								CustLogHashKey.hashCodeDirty = true;

								if (!hasCasePrimitiveKeyWithNull_tMap_1) { // G_TM_M_091

									tHash_Lookup_CustLog.lookup(CustLogHashKey);

								} // G_TM_M_091

							} // G_TM_M_020

							if (tHash_Lookup_CustLog != null && tHash_Lookup_CustLog.getCount(CustLogHashKey) > 1) { // G
																														// 071

								// System.out.println("WARNING: UNIQUE MATCH is configured for the lookup
								// 'CustLog' and it contains more one result from keys : CustLog.Customer_id =
								// '" + CustLogHashKey.Customer_id + "'");
							} // G 071

							CustLogStruct CustLog = null;

							CustLogStruct fromLookup_CustLog = null;
							CustLog = CustLogDefault;

							if (tHash_Lookup_CustLog != null && tHash_Lookup_CustLog.hasNext()) { // G 099

								fromLookup_CustLog = tHash_Lookup_CustLog.next();

							} // G 099

							if (fromLookup_CustLog != null) {
								CustLog = fromLookup_CustLog;
							}

							///////////////////////////////////////////////
							// Starting Lookup Table "CustSales"
							///////////////////////////////////////////////

							boolean forceLoopCustSales = false;

							CustSalesStruct CustSalesObjectFromLookup = null;

							if (!rejectedInnerJoin_tMap_1) { // G_TM_M_020

								hasCasePrimitiveKeyWithNull_tMap_1 = false;

								Object exprKeyValue_CustSales__Customer_id = CustDetails.Customer_id;
								if (exprKeyValue_CustSales__Customer_id == null) {
									hasCasePrimitiveKeyWithNull_tMap_1 = true;
								} else {
									CustSalesHashKey.Customer_id = (int) (Integer) exprKeyValue_CustSales__Customer_id;
								}

								CustSalesHashKey.hashCodeDirty = true;

								if (!hasCasePrimitiveKeyWithNull_tMap_1) { // G_TM_M_091

									tHash_Lookup_CustSales.lookup(CustSalesHashKey);

								} // G_TM_M_091

							} // G_TM_M_020

							if (tHash_Lookup_CustSales != null
									&& tHash_Lookup_CustSales.getCount(CustSalesHashKey) > 1) { // G 071

								// System.out.println("WARNING: UNIQUE MATCH is configured for the lookup
								// 'CustSales' and it contains more one result from keys : CustSales.Customer_id
								// = '" + CustSalesHashKey.Customer_id + "'");
							} // G 071

							CustSalesStruct CustSales = null;

							CustSalesStruct fromLookup_CustSales = null;
							CustSales = CustSalesDefault;

							if (tHash_Lookup_CustSales != null && tHash_Lookup_CustSales.hasNext()) { // G 099

								fromLookup_CustSales = tHash_Lookup_CustSales.next();

							} // G 099

							if (fromLookup_CustSales != null) {
								CustSales = fromLookup_CustSales;
							}

							// ###############################
							{ // start of Var scope

								// ###############################
								// # Vars tables

								Var__tMap_1__Struct Var = Var__tMap_1;// ###############################
								// ###############################
								// # Output tables

								CustInfoMerge = null;

// # Output table : 'CustInfoMerge'
								CustInfoMerge_tmp.Customer_id = CustDetails.Customer_id;
								CustInfoMerge_tmp.Age = CustDetails.Age;
								CustInfoMerge_tmp.Gender = CustDetails.Gender;
								CustInfoMerge_tmp.Location = CustDetails.Location;
								CustInfoMerge_tmp.MembershipLevel = CustDetails.MembershipLevel;
								CustInfoMerge_tmp.Time_Spent = CustLog.Time_Spent;
								CustInfoMerge_tmp.Browser = CustLog.Browser;
								CustInfoMerge_tmp.Newsletter = CustLog.Newsletter;
								CustInfoMerge_tmp.Voucher = CustLog.Voucher;
								CustInfoMerge_tmp.Churn = CustLog.Churn;
								CustInfoMerge_tmp.Revenue_Total = CustSales.Revenue_Total;
								CustInfoMerge_tmp.N_Purchases = CustSales.N_Purchases;
								CustInfoMerge_tmp.Purchase_DATE = CustSales.Purchase_DATE;
								CustInfoMerge_tmp.Purchase_VALUE = CustSales.Purchase_VALUE;
								CustInfoMerge_tmp.Pay_Method = CustSales.Pay_Method;
								CustInfoMerge_tmp.Most_Purchased = CustSales.Most_Purchased;
								CustInfoMerge = CustInfoMerge_tmp;
// ###############################

							} // end of Var scope

							rejectedInnerJoin_tMap_1 = false;

							tos_count_tMap_1++;

							/**
							 * [tMap_1 main ] stop
							 */

							/**
							 * [tMap_1 process_data_begin ] start
							 */

							currentComponent = "tMap_1";

							/**
							 * [tMap_1 process_data_begin ] stop
							 */
// Start of branch "CustInfoMerge"
							if (CustInfoMerge != null) {

								/**
								 * [tLogRow_4 main ] start
								 */

								currentComponent = "tLogRow_4";

///////////////////////		

								strBuffer_tLogRow_4 = new StringBuilder();

								strBuffer_tLogRow_4.append(String.valueOf(CustInfoMerge.Customer_id));

								strBuffer_tLogRow_4.append("|");

								if (CustInfoMerge.Age != null) { //

									strBuffer_tLogRow_4.append(String.valueOf(CustInfoMerge.Age));

								} //

								strBuffer_tLogRow_4.append("|");

								if (CustInfoMerge.Gender != null) { //

									strBuffer_tLogRow_4.append(String.valueOf(CustInfoMerge.Gender));

								} //

								strBuffer_tLogRow_4.append("|");

								if (CustInfoMerge.Location != null) { //

									strBuffer_tLogRow_4.append(String.valueOf(CustInfoMerge.Location));

								} //

								strBuffer_tLogRow_4.append("|");

								if (CustInfoMerge.MembershipLevel != null) { //

									strBuffer_tLogRow_4.append(String.valueOf(CustInfoMerge.MembershipLevel));

								} //

								strBuffer_tLogRow_4.append("|");

								if (CustInfoMerge.Time_Spent != null) { //

									strBuffer_tLogRow_4.append(String.valueOf(CustInfoMerge.Time_Spent));

								} //

								strBuffer_tLogRow_4.append("|");

								if (CustInfoMerge.Browser != null) { //

									strBuffer_tLogRow_4.append(String.valueOf(CustInfoMerge.Browser));

								} //

								strBuffer_tLogRow_4.append("|");

								if (CustInfoMerge.Newsletter != null) { //

									strBuffer_tLogRow_4.append(String.valueOf(CustInfoMerge.Newsletter));

								} //

								strBuffer_tLogRow_4.append("|");

								if (CustInfoMerge.Voucher != null) { //

									strBuffer_tLogRow_4.append(String.valueOf(CustInfoMerge.Voucher));

								} //

								strBuffer_tLogRow_4.append("|");

								if (CustInfoMerge.Churn != null) { //

									strBuffer_tLogRow_4.append(String.valueOf(CustInfoMerge.Churn));

								} //

								strBuffer_tLogRow_4.append("|");

								if (CustInfoMerge.Revenue_Total != null) { //

									strBuffer_tLogRow_4
											.append(FormatterUtils.formatUnwithE(CustInfoMerge.Revenue_Total));

								} //

								strBuffer_tLogRow_4.append("|");

								if (CustInfoMerge.N_Purchases != null) { //

									strBuffer_tLogRow_4.append(String.valueOf(CustInfoMerge.N_Purchases));

								} //

								strBuffer_tLogRow_4.append("|");

								if (CustInfoMerge.Purchase_DATE != null) { //

									strBuffer_tLogRow_4.append(
											FormatterUtils.format_Date(CustInfoMerge.Purchase_DATE, "dd.MM.yyyy"));

								} //

								strBuffer_tLogRow_4.append("|");

								if (CustInfoMerge.Purchase_VALUE != null) { //

									strBuffer_tLogRow_4
											.append(FormatterUtils.formatUnwithE(CustInfoMerge.Purchase_VALUE));

								} //

								strBuffer_tLogRow_4.append("|");

								if (CustInfoMerge.Pay_Method != null) { //

									strBuffer_tLogRow_4.append(String.valueOf(CustInfoMerge.Pay_Method));

								} //

								strBuffer_tLogRow_4.append("|");

								if (CustInfoMerge.Most_Purchased != null) { //

									strBuffer_tLogRow_4.append(String.valueOf(CustInfoMerge.Most_Purchased));

								} //

								if (globalMap.get("tLogRow_CONSOLE") != null) {
									consoleOut_tLogRow_4 = (java.io.PrintStream) globalMap.get("tLogRow_CONSOLE");
								} else {
									consoleOut_tLogRow_4 = new java.io.PrintStream(
											new java.io.BufferedOutputStream(System.out));
									globalMap.put("tLogRow_CONSOLE", consoleOut_tLogRow_4);
								}
								consoleOut_tLogRow_4.println(strBuffer_tLogRow_4.toString());
								consoleOut_tLogRow_4.flush();
								nb_line_tLogRow_4++;
//////

//////                    

///////////////////////    			

								CustInfo = CustInfoMerge;

								tos_count_tLogRow_4++;

								/**
								 * [tLogRow_4 main ] stop
								 */

								/**
								 * [tLogRow_4 process_data_begin ] start
								 */

								currentComponent = "tLogRow_4";

								/**
								 * [tLogRow_4 process_data_begin ] stop
								 */

								/**
								 * [tFileOutputDelimited_1 main ] start
								 */

								currentComponent = "tFileOutputDelimited_1";

								StringBuilder sb_tFileOutputDelimited_1 = new StringBuilder();
								sb_tFileOutputDelimited_1.append(CustInfo.Customer_id);
								sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
								if (CustInfo.Age != null) {
									sb_tFileOutputDelimited_1.append(CustInfo.Age);
								}
								sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
								if (CustInfo.Gender != null) {
									sb_tFileOutputDelimited_1.append(CustInfo.Gender);
								}
								sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
								if (CustInfo.Location != null) {
									sb_tFileOutputDelimited_1.append(CustInfo.Location);
								}
								sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
								if (CustInfo.MembershipLevel != null) {
									sb_tFileOutputDelimited_1.append(CustInfo.MembershipLevel);
								}
								sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
								if (CustInfo.Time_Spent != null) {
									sb_tFileOutputDelimited_1.append(CustInfo.Time_Spent);
								}
								sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
								if (CustInfo.Browser != null) {
									sb_tFileOutputDelimited_1.append(CustInfo.Browser);
								}
								sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
								if (CustInfo.Newsletter != null) {
									sb_tFileOutputDelimited_1.append(CustInfo.Newsletter);
								}
								sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
								if (CustInfo.Voucher != null) {
									sb_tFileOutputDelimited_1.append(CustInfo.Voucher);
								}
								sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
								if (CustInfo.Churn != null) {
									sb_tFileOutputDelimited_1.append(CustInfo.Churn);
								}
								sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
								if (CustInfo.Revenue_Total != null) {
									sb_tFileOutputDelimited_1.append(CustInfo.Revenue_Total);
								}
								sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
								if (CustInfo.N_Purchases != null) {
									sb_tFileOutputDelimited_1.append(CustInfo.N_Purchases);
								}
								sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
								if (CustInfo.Purchase_DATE != null) {
									sb_tFileOutputDelimited_1
											.append(FormatterUtils.format_Date(CustInfo.Purchase_DATE, "dd.MM.yyyy"));
								}
								sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
								if (CustInfo.Purchase_VALUE != null) {
									sb_tFileOutputDelimited_1.append(CustInfo.Purchase_VALUE);
								}
								sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
								if (CustInfo.Pay_Method != null) {
									sb_tFileOutputDelimited_1.append(CustInfo.Pay_Method);
								}
								sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
								if (CustInfo.Most_Purchased != null) {
									sb_tFileOutputDelimited_1.append(CustInfo.Most_Purchased);
								}
								sb_tFileOutputDelimited_1.append(OUT_DELIM_ROWSEP_tFileOutputDelimited_1);

								nb_line_tFileOutputDelimited_1++;
								resourceMap.put("nb_line_tFileOutputDelimited_1", nb_line_tFileOutputDelimited_1);

								outtFileOutputDelimited_1.write(sb_tFileOutputDelimited_1.toString());

								tos_count_tFileOutputDelimited_1++;

								/**
								 * [tFileOutputDelimited_1 main ] stop
								 */

								/**
								 * [tFileOutputDelimited_1 process_data_begin ] start
								 */

								currentComponent = "tFileOutputDelimited_1";

								/**
								 * [tFileOutputDelimited_1 process_data_begin ] stop
								 */

								/**
								 * [tFileOutputDelimited_1 process_data_end ] start
								 */

								currentComponent = "tFileOutputDelimited_1";

								/**
								 * [tFileOutputDelimited_1 process_data_end ] stop
								 */

								/**
								 * [tLogRow_4 process_data_end ] start
								 */

								currentComponent = "tLogRow_4";

								/**
								 * [tLogRow_4 process_data_end ] stop
								 */

							} // End of branch "CustInfoMerge"

							/**
							 * [tMap_1 process_data_end ] start
							 */

							currentComponent = "tMap_1";

							/**
							 * [tMap_1 process_data_end ] stop
							 */

							/**
							 * [tLogRow_1 process_data_end ] start
							 */

							currentComponent = "tLogRow_1";

							/**
							 * [tLogRow_1 process_data_end ] stop
							 */

						} // End of branch "CustDetailsInput"

						/**
						 * [tFileInputDelimited_1 process_data_end ] start
						 */

						currentComponent = "tFileInputDelimited_1";

						/**
						 * [tFileInputDelimited_1 process_data_end ] stop
						 */

						/**
						 * [tFileInputDelimited_1 end ] start
						 */

						currentComponent = "tFileInputDelimited_1";

					}
				} finally {
					if (!((Object) ("D:/Documents/UM - Master/Sem 3/WQD7005 Data Mining/AA1/CustDetails.csv") instanceof java.io.InputStream)) {
						if (fid_tFileInputDelimited_1 != null) {
							fid_tFileInputDelimited_1.close();
						}
					}
					if (fid_tFileInputDelimited_1 != null) {
						globalMap.put("tFileInputDelimited_1_NB_LINE", fid_tFileInputDelimited_1.getRowNumber());

					}
				}

				ok_Hash.put("tFileInputDelimited_1", true);
				end_Hash.put("tFileInputDelimited_1", System.currentTimeMillis());

				/**
				 * [tFileInputDelimited_1 end ] stop
				 */

				/**
				 * [tLogRow_1 end ] start
				 */

				currentComponent = "tLogRow_1";

//////
//////
				globalMap.put("tLogRow_1_NB_LINE", nb_line_tLogRow_1);

///////////////////////    			

				ok_Hash.put("tLogRow_1", true);
				end_Hash.put("tLogRow_1", System.currentTimeMillis());

				/**
				 * [tLogRow_1 end ] stop
				 */

				/**
				 * [tMap_1 end ] start
				 */

				currentComponent = "tMap_1";

// ###############################
// # Lookup hashes releasing
				if (tHash_Lookup_CustLog != null) {
					tHash_Lookup_CustLog.endGet();
				}
				globalMap.remove("tHash_Lookup_CustLog");

				if (tHash_Lookup_CustSales != null) {
					tHash_Lookup_CustSales.endGet();
				}
				globalMap.remove("tHash_Lookup_CustSales");

// ###############################      

				ok_Hash.put("tMap_1", true);
				end_Hash.put("tMap_1", System.currentTimeMillis());

				/**
				 * [tMap_1 end ] stop
				 */

				/**
				 * [tLogRow_4 end ] start
				 */

				currentComponent = "tLogRow_4";

//////
//////
				globalMap.put("tLogRow_4_NB_LINE", nb_line_tLogRow_4);

///////////////////////    			

				ok_Hash.put("tLogRow_4", true);
				end_Hash.put("tLogRow_4", System.currentTimeMillis());

				/**
				 * [tLogRow_4 end ] stop
				 */

				/**
				 * [tFileOutputDelimited_1 end ] start
				 */

				currentComponent = "tFileOutputDelimited_1";

				if (outtFileOutputDelimited_1 != null) {
					outtFileOutputDelimited_1.flush();
					outtFileOutputDelimited_1.close();
				}

				globalMap.put("tFileOutputDelimited_1_NB_LINE", nb_line_tFileOutputDelimited_1);
				globalMap.put("tFileOutputDelimited_1_FILE_NAME", fileName_tFileOutputDelimited_1);

				resourceMap.put("finish_tFileOutputDelimited_1", true);

				ok_Hash.put("tFileOutputDelimited_1", true);
				end_Hash.put("tFileOutputDelimited_1", System.currentTimeMillis());

				/**
				 * [tFileOutputDelimited_1 end ] stop
				 */

			} // end the resume

		} catch (java.lang.Exception e) {

			TalendException te = new TalendException(e, currentComponent, globalMap);

			throw te;
		} catch (java.lang.Error error) {

			throw error;
		} finally {

			// free memory for "tMap_1"
			globalMap.remove("tHash_Lookup_CustLog");

			// free memory for "tMap_1"
			globalMap.remove("tHash_Lookup_CustSales");

			try {

				/**
				 * [tFileInputDelimited_1 finally ] start
				 */

				currentComponent = "tFileInputDelimited_1";

				/**
				 * [tFileInputDelimited_1 finally ] stop
				 */

				/**
				 * [tLogRow_1 finally ] start
				 */

				currentComponent = "tLogRow_1";

				/**
				 * [tLogRow_1 finally ] stop
				 */

				/**
				 * [tMap_1 finally ] start
				 */

				currentComponent = "tMap_1";

				/**
				 * [tMap_1 finally ] stop
				 */

				/**
				 * [tLogRow_4 finally ] start
				 */

				currentComponent = "tLogRow_4";

				/**
				 * [tLogRow_4 finally ] stop
				 */

				/**
				 * [tFileOutputDelimited_1 finally ] start
				 */

				currentComponent = "tFileOutputDelimited_1";

				if (resourceMap.get("finish_tFileOutputDelimited_1") == null) {

					java.io.Writer outtFileOutputDelimited_1 = (java.io.Writer) resourceMap
							.get("out_tFileOutputDelimited_1");
					if (outtFileOutputDelimited_1 != null) {
						outtFileOutputDelimited_1.flush();
						outtFileOutputDelimited_1.close();
					}

				}

				/**
				 * [tFileOutputDelimited_1 finally ] stop
				 */

			} catch (java.lang.Exception e) {
				// ignore
			} catch (java.lang.Error error) {
				// ignore
			}
			resourceMap = null;
		}

		globalMap.put("tFileInputDelimited_1_SUBPROCESS_STATE", 1);
	}

	public static class CustLogStruct implements routines.system.IPersistableComparableLookupRow<CustLogStruct> {
		final static byte[] commonByteArrayLock_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis = new byte[0];
		static byte[] commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis = new byte[0];
		protected static final int DEFAULT_HASHCODE = 1;
		protected static final int PRIME = 31;
		protected int hashCode = DEFAULT_HASHCODE;
		public boolean hashCodeDirty = true;

		public String loopKey;

		public int Customer_id;

		public int getCustomer_id() {
			return this.Customer_id;
		}

		public Integer Time_Spent;

		public Integer getTime_Spent() {
			return this.Time_Spent;
		}

		public Boolean Browser;

		public Boolean getBrowser() {
			return this.Browser;
		}

		public Boolean Newsletter;

		public Boolean getNewsletter() {
			return this.Newsletter;
		}

		public Boolean Voucher;

		public Boolean getVoucher() {
			return this.Voucher;
		}

		public Boolean Churn;

		public Boolean getChurn() {
			return this.Churn;
		}

		@Override
		public int hashCode() {
			if (this.hashCodeDirty) {
				final int prime = PRIME;
				int result = DEFAULT_HASHCODE;

				result = prime * result + (int) this.Customer_id;

				this.hashCode = result;
				this.hashCodeDirty = false;
			}
			return this.hashCode;
		}

		@Override
		public boolean equals(Object obj) {
			if (this == obj)
				return true;
			if (obj == null)
				return false;
			if (getClass() != obj.getClass())
				return false;
			final CustLogStruct other = (CustLogStruct) obj;

			if (this.Customer_id != other.Customer_id)
				return false;

			return true;
		}

		public void copyDataTo(CustLogStruct other) {

			other.Customer_id = this.Customer_id;
			other.Time_Spent = this.Time_Spent;
			other.Browser = this.Browser;
			other.Newsletter = this.Newsletter;
			other.Voucher = this.Voucher;
			other.Churn = this.Churn;

		}

		public void copyKeysDataTo(CustLogStruct other) {

			other.Customer_id = this.Customer_id;

		}

		private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller)
				throws IOException {
			Integer intReturn;
			int length = 0;
			length = unmarshaller.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = unmarshaller.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private void writeInteger(Integer intNum, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller)
				throws IOException {
			if (intNum == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeInt(intNum);
			}
		}

		public void readKeysData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis) {

				try {

					int length = 0;

					this.Customer_id = dis.readInt();

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis) {

				try {

					int length = 0;

					this.Customer_id = dis.readInt();

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeKeysData(ObjectOutputStream dos) {
			try {

				// int

				dos.writeInt(this.Customer_id);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
			try {

				// int

				dos.writeInt(this.Customer_id);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		/**
		 * Fill Values data by reading ObjectInputStream.
		 */
		public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
			try {

				int length = 0;

				this.Time_Spent = readInteger(dis, ois);

				length = dis.readByte();
				if (length == -1) {
					this.Browser = null;
				} else {
					this.Browser = dis.readBoolean();
				}

				length = dis.readByte();
				if (length == -1) {
					this.Newsletter = null;
				} else {
					this.Newsletter = dis.readBoolean();
				}

				length = dis.readByte();
				if (length == -1) {
					this.Voucher = null;
				} else {
					this.Voucher = dis.readBoolean();
				}

				length = dis.readByte();
				if (length == -1) {
					this.Churn = null;
				} else {
					this.Churn = dis.readBoolean();
				}

			} catch (IOException e) {
				throw new RuntimeException(e);

			}

		}

		public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
			try {
				int length = 0;

				this.Time_Spent = readInteger(dis, objectIn);

				length = objectIn.readByte();
				if (length == -1) {
					this.Browser = null;
				} else {
					this.Browser = objectIn.readBoolean();
				}

				length = objectIn.readByte();
				if (length == -1) {
					this.Newsletter = null;
				} else {
					this.Newsletter = objectIn.readBoolean();
				}

				length = objectIn.readByte();
				if (length == -1) {
					this.Voucher = null;
				} else {
					this.Voucher = objectIn.readBoolean();
				}

				length = objectIn.readByte();
				if (length == -1) {
					this.Churn = null;
				} else {
					this.Churn = objectIn.readBoolean();
				}

			} catch (IOException e) {
				throw new RuntimeException(e);

			}

		}

		/**
		 * Return a byte array which represents Values data.
		 */
		public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
			try {

				writeInteger(this.Time_Spent, dos, oos);

				if (this.Browser == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeBoolean(this.Browser);
				}

				if (this.Newsletter == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeBoolean(this.Newsletter);
				}

				if (this.Voucher == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeBoolean(this.Voucher);
				}

				if (this.Churn == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeBoolean(this.Churn);
				}

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut) {
			try {

				writeInteger(this.Time_Spent, dos, objectOut);

				if (this.Browser == null) {
					objectOut.writeByte(-1);
				} else {
					objectOut.writeByte(0);
					objectOut.writeBoolean(this.Browser);
				}

				if (this.Newsletter == null) {
					objectOut.writeByte(-1);
				} else {
					objectOut.writeByte(0);
					objectOut.writeBoolean(this.Newsletter);
				}

				if (this.Voucher == null) {
					objectOut.writeByte(-1);
				} else {
					objectOut.writeByte(0);
					objectOut.writeBoolean(this.Voucher);
				}

				if (this.Churn == null) {
					objectOut.writeByte(-1);
				} else {
					objectOut.writeByte(0);
					objectOut.writeBoolean(this.Churn);
				}

			} catch (IOException e) {
				throw new RuntimeException(e);
			}
		}

		public boolean supportMarshaller() {
			return true;
		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Customer_id=" + String.valueOf(Customer_id));
			sb.append(",Time_Spent=" + String.valueOf(Time_Spent));
			sb.append(",Browser=" + String.valueOf(Browser));
			sb.append(",Newsletter=" + String.valueOf(Newsletter));
			sb.append(",Voucher=" + String.valueOf(Voucher));
			sb.append(",Churn=" + String.valueOf(Churn));
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(CustLogStruct other) {

			int returnValue = -1;

			returnValue = checkNullsAndCompare(this.Customer_id, other.Customer_id);
			if (returnValue != 0) {
				return returnValue;
			}

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class CustLogInputStruct implements routines.system.IPersistableRow<CustLogInputStruct> {
		final static byte[] commonByteArrayLock_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis = new byte[0];
		static byte[] commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis = new byte[0];
		protected static final int DEFAULT_HASHCODE = 1;
		protected static final int PRIME = 31;
		protected int hashCode = DEFAULT_HASHCODE;
		public boolean hashCodeDirty = true;

		public String loopKey;

		public int Customer_id;

		public int getCustomer_id() {
			return this.Customer_id;
		}

		public Integer Time_Spent;

		public Integer getTime_Spent() {
			return this.Time_Spent;
		}

		public Boolean Browser;

		public Boolean getBrowser() {
			return this.Browser;
		}

		public Boolean Newsletter;

		public Boolean getNewsletter() {
			return this.Newsletter;
		}

		public Boolean Voucher;

		public Boolean getVoucher() {
			return this.Voucher;
		}

		public Boolean Churn;

		public Boolean getChurn() {
			return this.Churn;
		}

		@Override
		public int hashCode() {
			if (this.hashCodeDirty) {
				final int prime = PRIME;
				int result = DEFAULT_HASHCODE;

				result = prime * result + (int) this.Customer_id;

				this.hashCode = result;
				this.hashCodeDirty = false;
			}
			return this.hashCode;
		}

		@Override
		public boolean equals(Object obj) {
			if (this == obj)
				return true;
			if (obj == null)
				return false;
			if (getClass() != obj.getClass())
				return false;
			final CustLogInputStruct other = (CustLogInputStruct) obj;

			if (this.Customer_id != other.Customer_id)
				return false;

			return true;
		}

		public void copyDataTo(CustLogInputStruct other) {

			other.Customer_id = this.Customer_id;
			other.Time_Spent = this.Time_Spent;
			other.Browser = this.Browser;
			other.Newsletter = this.Newsletter;
			other.Voucher = this.Voucher;
			other.Churn = this.Churn;

		}

		public void copyKeysDataTo(CustLogInputStruct other) {

			other.Customer_id = this.Customer_id;

		}

		private Integer readInteger(ObjectInputStream dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (intNum == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeInt(intNum);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis) {

				try {

					int length = 0;

					this.Customer_id = dis.readInt();

					this.Time_Spent = readInteger(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Browser = null;
					} else {
						this.Browser = dis.readBoolean();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Newsletter = null;
					} else {
						this.Newsletter = dis.readBoolean();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Voucher = null;
					} else {
						this.Voucher = dis.readBoolean();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Churn = null;
					} else {
						this.Churn = dis.readBoolean();
					}

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis) {

				try {

					int length = 0;

					this.Customer_id = dis.readInt();

					this.Time_Spent = readInteger(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Browser = null;
					} else {
						this.Browser = dis.readBoolean();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Newsletter = null;
					} else {
						this.Newsletter = dis.readBoolean();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Voucher = null;
					} else {
						this.Voucher = dis.readBoolean();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Churn = null;
					} else {
						this.Churn = dis.readBoolean();
					}

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// int

				dos.writeInt(this.Customer_id);

				// Integer

				writeInteger(this.Time_Spent, dos);

				// Boolean

				if (this.Browser == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeBoolean(this.Browser);
				}

				// Boolean

				if (this.Newsletter == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeBoolean(this.Newsletter);
				}

				// Boolean

				if (this.Voucher == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeBoolean(this.Voucher);
				}

				// Boolean

				if (this.Churn == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeBoolean(this.Churn);
				}

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// int

				dos.writeInt(this.Customer_id);

				// Integer

				writeInteger(this.Time_Spent, dos);

				// Boolean

				if (this.Browser == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeBoolean(this.Browser);
				}

				// Boolean

				if (this.Newsletter == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeBoolean(this.Newsletter);
				}

				// Boolean

				if (this.Voucher == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeBoolean(this.Voucher);
				}

				// Boolean

				if (this.Churn == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeBoolean(this.Churn);
				}

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Customer_id=" + String.valueOf(Customer_id));
			sb.append(",Time_Spent=" + String.valueOf(Time_Spent));
			sb.append(",Browser=" + String.valueOf(Browser));
			sb.append(",Newsletter=" + String.valueOf(Newsletter));
			sb.append(",Voucher=" + String.valueOf(Voucher));
			sb.append(",Churn=" + String.valueOf(Churn));
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(CustLogInputStruct other) {

			int returnValue = -1;

			returnValue = checkNullsAndCompare(this.Customer_id, other.Customer_id);
			if (returnValue != 0) {
				return returnValue;
			}

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public void tFileInputDelimited_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
		globalMap.put("tFileInputDelimited_3_SUBPROCESS_STATE", 0);

		final boolean execStat = this.execStat;

		String iterateId = "";

		String currentComponent = "";
		java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

		try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { // start the resume
				globalResumeTicket = true;

				CustLogInputStruct CustLogInput = new CustLogInputStruct();
				CustLogInputStruct CustLog = CustLogInput;

				/**
				 * [tAdvancedHash_CustLog begin ] start
				 */

				ok_Hash.put("tAdvancedHash_CustLog", false);
				start_Hash.put("tAdvancedHash_CustLog", System.currentTimeMillis());

				currentComponent = "tAdvancedHash_CustLog";

				int tos_count_tAdvancedHash_CustLog = 0;

				// connection name:CustLog
				// source node:tLogRow_2 - inputs:(CustLogInput) outputs:(CustLog,CustLog) |
				// target node:tAdvancedHash_CustLog - inputs:(CustLog) outputs:()
				// linked node: tMap_1 - inputs:(CustDetails,CustLog,CustSales)
				// outputs:(CustInfoMerge)

				org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_CustLog = org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;

				org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<CustLogStruct> tHash_Lookup_CustLog = org.talend.designer.components.lookup.memory.AdvancedMemoryLookup
						.<CustLogStruct>getLookup(matchingModeEnum_CustLog);

				globalMap.put("tHash_Lookup_CustLog", tHash_Lookup_CustLog);

				/**
				 * [tAdvancedHash_CustLog begin ] stop
				 */

				/**
				 * [tLogRow_2 begin ] start
				 */

				ok_Hash.put("tLogRow_2", false);
				start_Hash.put("tLogRow_2", System.currentTimeMillis());

				currentComponent = "tLogRow_2";

				int tos_count_tLogRow_2 = 0;

				///////////////////////

				final String OUTPUT_FIELD_SEPARATOR_tLogRow_2 = "|";
				java.io.PrintStream consoleOut_tLogRow_2 = null;

				StringBuilder strBuffer_tLogRow_2 = null;
				int nb_line_tLogRow_2 = 0;
///////////////////////    			

				/**
				 * [tLogRow_2 begin ] stop
				 */

				/**
				 * [tFileInputDelimited_3 begin ] start
				 */

				ok_Hash.put("tFileInputDelimited_3", false);
				start_Hash.put("tFileInputDelimited_3", System.currentTimeMillis());

				currentComponent = "tFileInputDelimited_3";

				int tos_count_tFileInputDelimited_3 = 0;

				final routines.system.RowState rowstate_tFileInputDelimited_3 = new routines.system.RowState();

				int nb_line_tFileInputDelimited_3 = 0;
				org.talend.fileprocess.FileInputDelimited fid_tFileInputDelimited_3 = null;
				int limit_tFileInputDelimited_3 = -1;
				try {

					Object filename_tFileInputDelimited_3 = "D:/Documents/UM - Master/Sem 3/WQD7005 Data Mining/AA1/CustLog.csv";
					if (filename_tFileInputDelimited_3 instanceof java.io.InputStream) {

						int footer_value_tFileInputDelimited_3 = 0, random_value_tFileInputDelimited_3 = -1;
						if (footer_value_tFileInputDelimited_3 > 0 || random_value_tFileInputDelimited_3 > 0) {
							throw new java.lang.Exception(
									"When the input source is a stream,footer and random shouldn't be bigger than 0.");
						}

					}
					try {
						fid_tFileInputDelimited_3 = new org.talend.fileprocess.FileInputDelimited(
								"D:/Documents/UM - Master/Sem 3/WQD7005 Data Mining/AA1/CustLog.csv", "ISO-8859-15",
								",", "\n", true, 1, 0, limit_tFileInputDelimited_3, -1, false);
					} catch (java.lang.Exception e) {
						globalMap.put("tFileInputDelimited_3_ERROR_MESSAGE", e.getMessage());

						System.err.println(e.getMessage());

					}

					while (fid_tFileInputDelimited_3 != null && fid_tFileInputDelimited_3.nextRecord()) {
						rowstate_tFileInputDelimited_3.reset();

						CustLogInput = null;

						boolean whetherReject_tFileInputDelimited_3 = false;
						CustLogInput = new CustLogInputStruct();
						try {

							int columnIndexWithD_tFileInputDelimited_3 = 0;

							String temp = "";

							columnIndexWithD_tFileInputDelimited_3 = 0;

							temp = fid_tFileInputDelimited_3.get(columnIndexWithD_tFileInputDelimited_3);
							if (temp.length() > 0) {

								try {

									CustLogInput.Customer_id = ParserUtils.parseTo_int(temp);

								} catch (java.lang.Exception ex_tFileInputDelimited_3) {
									globalMap.put("tFileInputDelimited_3_ERROR_MESSAGE",
											ex_tFileInputDelimited_3.getMessage());
									rowstate_tFileInputDelimited_3.setException(new RuntimeException(String.format(
											"Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
											"Customer_id", "CustLogInput", temp, ex_tFileInputDelimited_3),
											ex_tFileInputDelimited_3));
								}

							} else {

								rowstate_tFileInputDelimited_3.setException(new RuntimeException(
										"Value is empty for column : 'Customer_id' in 'CustLogInput' connection, value is invalid or this column should be nullable or have a default value."));

							}

							columnIndexWithD_tFileInputDelimited_3 = 1;

							temp = fid_tFileInputDelimited_3.get(columnIndexWithD_tFileInputDelimited_3);
							if (temp.length() > 0) {

								try {

									CustLogInput.Time_Spent = ParserUtils.parseTo_Integer(temp);

								} catch (java.lang.Exception ex_tFileInputDelimited_3) {
									globalMap.put("tFileInputDelimited_3_ERROR_MESSAGE",
											ex_tFileInputDelimited_3.getMessage());
									rowstate_tFileInputDelimited_3.setException(new RuntimeException(String.format(
											"Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
											"Time_Spent", "CustLogInput", temp, ex_tFileInputDelimited_3),
											ex_tFileInputDelimited_3));
								}

							} else {

								CustLogInput.Time_Spent = null;

							}

							columnIndexWithD_tFileInputDelimited_3 = 2;

							temp = fid_tFileInputDelimited_3.get(columnIndexWithD_tFileInputDelimited_3);
							if (temp.length() > 0) {

								try {

									CustLogInput.Browser = ParserUtils.parseTo_Boolean(temp);

								} catch (java.lang.Exception ex_tFileInputDelimited_3) {
									globalMap.put("tFileInputDelimited_3_ERROR_MESSAGE",
											ex_tFileInputDelimited_3.getMessage());
									rowstate_tFileInputDelimited_3.setException(new RuntimeException(String.format(
											"Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
											"Browser", "CustLogInput", temp, ex_tFileInputDelimited_3),
											ex_tFileInputDelimited_3));
								}

							} else {

								CustLogInput.Browser = null;

							}

							columnIndexWithD_tFileInputDelimited_3 = 3;

							temp = fid_tFileInputDelimited_3.get(columnIndexWithD_tFileInputDelimited_3);
							if (temp.length() > 0) {

								try {

									CustLogInput.Newsletter = ParserUtils.parseTo_Boolean(temp);

								} catch (java.lang.Exception ex_tFileInputDelimited_3) {
									globalMap.put("tFileInputDelimited_3_ERROR_MESSAGE",
											ex_tFileInputDelimited_3.getMessage());
									rowstate_tFileInputDelimited_3.setException(new RuntimeException(String.format(
											"Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
											"Newsletter", "CustLogInput", temp, ex_tFileInputDelimited_3),
											ex_tFileInputDelimited_3));
								}

							} else {

								CustLogInput.Newsletter = null;

							}

							columnIndexWithD_tFileInputDelimited_3 = 4;

							temp = fid_tFileInputDelimited_3.get(columnIndexWithD_tFileInputDelimited_3);
							if (temp.length() > 0) {

								try {

									CustLogInput.Voucher = ParserUtils.parseTo_Boolean(temp);

								} catch (java.lang.Exception ex_tFileInputDelimited_3) {
									globalMap.put("tFileInputDelimited_3_ERROR_MESSAGE",
											ex_tFileInputDelimited_3.getMessage());
									rowstate_tFileInputDelimited_3.setException(new RuntimeException(String.format(
											"Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
											"Voucher", "CustLogInput", temp, ex_tFileInputDelimited_3),
											ex_tFileInputDelimited_3));
								}

							} else {

								CustLogInput.Voucher = null;

							}

							columnIndexWithD_tFileInputDelimited_3 = 5;

							temp = fid_tFileInputDelimited_3.get(columnIndexWithD_tFileInputDelimited_3);
							if (temp.length() > 0) {

								try {

									CustLogInput.Churn = ParserUtils.parseTo_Boolean(temp);

								} catch (java.lang.Exception ex_tFileInputDelimited_3) {
									globalMap.put("tFileInputDelimited_3_ERROR_MESSAGE",
											ex_tFileInputDelimited_3.getMessage());
									rowstate_tFileInputDelimited_3.setException(new RuntimeException(String.format(
											"Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
											"Churn", "CustLogInput", temp, ex_tFileInputDelimited_3),
											ex_tFileInputDelimited_3));
								}

							} else {

								CustLogInput.Churn = null;

							}

							if (rowstate_tFileInputDelimited_3.getException() != null) {
								throw rowstate_tFileInputDelimited_3.getException();
							}

						} catch (java.lang.Exception e) {
							globalMap.put("tFileInputDelimited_3_ERROR_MESSAGE", e.getMessage());
							whetherReject_tFileInputDelimited_3 = true;

							System.err.println(e.getMessage());
							CustLogInput = null;

						}

						/**
						 * [tFileInputDelimited_3 begin ] stop
						 */

						/**
						 * [tFileInputDelimited_3 main ] start
						 */

						currentComponent = "tFileInputDelimited_3";

						tos_count_tFileInputDelimited_3++;

						/**
						 * [tFileInputDelimited_3 main ] stop
						 */

						/**
						 * [tFileInputDelimited_3 process_data_begin ] start
						 */

						currentComponent = "tFileInputDelimited_3";

						/**
						 * [tFileInputDelimited_3 process_data_begin ] stop
						 */
// Start of branch "CustLogInput"
						if (CustLogInput != null) {

							/**
							 * [tLogRow_2 main ] start
							 */

							currentComponent = "tLogRow_2";

///////////////////////		

							strBuffer_tLogRow_2 = new StringBuilder();

							strBuffer_tLogRow_2.append(String.valueOf(CustLogInput.Customer_id));

							strBuffer_tLogRow_2.append("|");

							if (CustLogInput.Time_Spent != null) { //

								strBuffer_tLogRow_2.append(String.valueOf(CustLogInput.Time_Spent));

							} //

							strBuffer_tLogRow_2.append("|");

							if (CustLogInput.Browser != null) { //

								strBuffer_tLogRow_2.append(String.valueOf(CustLogInput.Browser));

							} //

							strBuffer_tLogRow_2.append("|");

							if (CustLogInput.Newsletter != null) { //

								strBuffer_tLogRow_2.append(String.valueOf(CustLogInput.Newsletter));

							} //

							strBuffer_tLogRow_2.append("|");

							if (CustLogInput.Voucher != null) { //

								strBuffer_tLogRow_2.append(String.valueOf(CustLogInput.Voucher));

							} //

							strBuffer_tLogRow_2.append("|");

							if (CustLogInput.Churn != null) { //

								strBuffer_tLogRow_2.append(String.valueOf(CustLogInput.Churn));

							} //

							if (globalMap.get("tLogRow_CONSOLE") != null) {
								consoleOut_tLogRow_2 = (java.io.PrintStream) globalMap.get("tLogRow_CONSOLE");
							} else {
								consoleOut_tLogRow_2 = new java.io.PrintStream(
										new java.io.BufferedOutputStream(System.out));
								globalMap.put("tLogRow_CONSOLE", consoleOut_tLogRow_2);
							}
							consoleOut_tLogRow_2.println(strBuffer_tLogRow_2.toString());
							consoleOut_tLogRow_2.flush();
							nb_line_tLogRow_2++;
//////

//////                    

///////////////////////    			

							CustLog = CustLogInput;

							tos_count_tLogRow_2++;

							/**
							 * [tLogRow_2 main ] stop
							 */

							/**
							 * [tLogRow_2 process_data_begin ] start
							 */

							currentComponent = "tLogRow_2";

							/**
							 * [tLogRow_2 process_data_begin ] stop
							 */

							/**
							 * [tAdvancedHash_CustLog main ] start
							 */

							currentComponent = "tAdvancedHash_CustLog";

							CustLogStruct CustLog_HashRow = new CustLogStruct();

							CustLog_HashRow.Customer_id = CustLog.Customer_id;

							CustLog_HashRow.Time_Spent = CustLog.Time_Spent;

							CustLog_HashRow.Browser = CustLog.Browser;

							CustLog_HashRow.Newsletter = CustLog.Newsletter;

							CustLog_HashRow.Voucher = CustLog.Voucher;

							CustLog_HashRow.Churn = CustLog.Churn;

							tHash_Lookup_CustLog.put(CustLog_HashRow);

							tos_count_tAdvancedHash_CustLog++;

							/**
							 * [tAdvancedHash_CustLog main ] stop
							 */

							/**
							 * [tAdvancedHash_CustLog process_data_begin ] start
							 */

							currentComponent = "tAdvancedHash_CustLog";

							/**
							 * [tAdvancedHash_CustLog process_data_begin ] stop
							 */

							/**
							 * [tAdvancedHash_CustLog process_data_end ] start
							 */

							currentComponent = "tAdvancedHash_CustLog";

							/**
							 * [tAdvancedHash_CustLog process_data_end ] stop
							 */

							/**
							 * [tLogRow_2 process_data_end ] start
							 */

							currentComponent = "tLogRow_2";

							/**
							 * [tLogRow_2 process_data_end ] stop
							 */

						} // End of branch "CustLogInput"

						/**
						 * [tFileInputDelimited_3 process_data_end ] start
						 */

						currentComponent = "tFileInputDelimited_3";

						/**
						 * [tFileInputDelimited_3 process_data_end ] stop
						 */

						/**
						 * [tFileInputDelimited_3 end ] start
						 */

						currentComponent = "tFileInputDelimited_3";

					}
				} finally {
					if (!((Object) ("D:/Documents/UM - Master/Sem 3/WQD7005 Data Mining/AA1/CustLog.csv") instanceof java.io.InputStream)) {
						if (fid_tFileInputDelimited_3 != null) {
							fid_tFileInputDelimited_3.close();
						}
					}
					if (fid_tFileInputDelimited_3 != null) {
						globalMap.put("tFileInputDelimited_3_NB_LINE", fid_tFileInputDelimited_3.getRowNumber());

					}
				}

				ok_Hash.put("tFileInputDelimited_3", true);
				end_Hash.put("tFileInputDelimited_3", System.currentTimeMillis());

				/**
				 * [tFileInputDelimited_3 end ] stop
				 */

				/**
				 * [tLogRow_2 end ] start
				 */

				currentComponent = "tLogRow_2";

//////
//////
				globalMap.put("tLogRow_2_NB_LINE", nb_line_tLogRow_2);

///////////////////////    			

				ok_Hash.put("tLogRow_2", true);
				end_Hash.put("tLogRow_2", System.currentTimeMillis());

				/**
				 * [tLogRow_2 end ] stop
				 */

				/**
				 * [tAdvancedHash_CustLog end ] start
				 */

				currentComponent = "tAdvancedHash_CustLog";

				tHash_Lookup_CustLog.endPut();

				ok_Hash.put("tAdvancedHash_CustLog", true);
				end_Hash.put("tAdvancedHash_CustLog", System.currentTimeMillis());

				/**
				 * [tAdvancedHash_CustLog end ] stop
				 */

			} // end the resume

		} catch (java.lang.Exception e) {

			TalendException te = new TalendException(e, currentComponent, globalMap);

			throw te;
		} catch (java.lang.Error error) {

			throw error;
		} finally {

			try {

				/**
				 * [tFileInputDelimited_3 finally ] start
				 */

				currentComponent = "tFileInputDelimited_3";

				/**
				 * [tFileInputDelimited_3 finally ] stop
				 */

				/**
				 * [tLogRow_2 finally ] start
				 */

				currentComponent = "tLogRow_2";

				/**
				 * [tLogRow_2 finally ] stop
				 */

				/**
				 * [tAdvancedHash_CustLog finally ] start
				 */

				currentComponent = "tAdvancedHash_CustLog";

				/**
				 * [tAdvancedHash_CustLog finally ] stop
				 */

			} catch (java.lang.Exception e) {
				// ignore
			} catch (java.lang.Error error) {
				// ignore
			}
			resourceMap = null;
		}

		globalMap.put("tFileInputDelimited_3_SUBPROCESS_STATE", 1);
	}

	public static class CustSalesStruct implements routines.system.IPersistableComparableLookupRow<CustSalesStruct> {
		final static byte[] commonByteArrayLock_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis = new byte[0];
		static byte[] commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis = new byte[0];
		protected static final int DEFAULT_HASHCODE = 1;
		protected static final int PRIME = 31;
		protected int hashCode = DEFAULT_HASHCODE;
		public boolean hashCodeDirty = true;

		public String loopKey;

		public int Customer_id;

		public int getCustomer_id() {
			return this.Customer_id;
		}

		public Double Revenue_Total;

		public Double getRevenue_Total() {
			return this.Revenue_Total;
		}

		public Integer N_Purchases;

		public Integer getN_Purchases() {
			return this.N_Purchases;
		}

		public java.util.Date Purchase_DATE;

		public java.util.Date getPurchase_DATE() {
			return this.Purchase_DATE;
		}

		public Float Purchase_VALUE;

		public Float getPurchase_VALUE() {
			return this.Purchase_VALUE;
		}

		public String Pay_Method;

		public String getPay_Method() {
			return this.Pay_Method;
		}

		public String Most_Purchased;

		public String getMost_Purchased() {
			return this.Most_Purchased;
		}

		@Override
		public int hashCode() {
			if (this.hashCodeDirty) {
				final int prime = PRIME;
				int result = DEFAULT_HASHCODE;

				result = prime * result + (int) this.Customer_id;

				this.hashCode = result;
				this.hashCodeDirty = false;
			}
			return this.hashCode;
		}

		@Override
		public boolean equals(Object obj) {
			if (this == obj)
				return true;
			if (obj == null)
				return false;
			if (getClass() != obj.getClass())
				return false;
			final CustSalesStruct other = (CustSalesStruct) obj;

			if (this.Customer_id != other.Customer_id)
				return false;

			return true;
		}

		public void copyDataTo(CustSalesStruct other) {

			other.Customer_id = this.Customer_id;
			other.Revenue_Total = this.Revenue_Total;
			other.N_Purchases = this.N_Purchases;
			other.Purchase_DATE = this.Purchase_DATE;
			other.Purchase_VALUE = this.Purchase_VALUE;
			other.Pay_Method = this.Pay_Method;
			other.Most_Purchased = this.Most_Purchased;

		}

		public void copyKeysDataTo(CustSalesStruct other) {

			other.Customer_id = this.Customer_id;

		}

		private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller)
				throws IOException {
			Integer intReturn;
			int length = 0;
			length = unmarshaller.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = unmarshaller.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private void writeInteger(Integer intNum, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller)
				throws IOException {
			if (intNum == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeInt(intNum);
			}
		}

		private java.util.Date readDate(DataInputStream dis, ObjectInputStream ois) throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(dis.readLong());
			}
			return dateReturn;
		}

		private java.util.Date readDate(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller)
				throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = unmarshaller.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(unmarshaller.readLong());
			}
			return dateReturn;
		}

		private void writeDate(java.util.Date date1, DataOutputStream dos, ObjectOutputStream oos) throws IOException {
			if (date1 == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeLong(date1.getTime());
			}
		}

		private void writeDate(java.util.Date date1, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller)
				throws IOException {
			if (date1 == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeLong(date1.getTime());
			}
		}

		private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				byte[] byteArray = new byte[length];
				dis.read(byteArray);
				strReturn = new String(byteArray, utf8Charset);
			}
			return strReturn;
		}

		private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller)
				throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				byte[] byteArray = new byte[length];
				unmarshaller.read(byteArray);
				strReturn = new String(byteArray, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller)
				throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		public void readKeysData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis) {

				try {

					int length = 0;

					this.Customer_id = dis.readInt();

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis) {

				try {

					int length = 0;

					this.Customer_id = dis.readInt();

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeKeysData(ObjectOutputStream dos) {
			try {

				// int

				dos.writeInt(this.Customer_id);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
			try {

				// int

				dos.writeInt(this.Customer_id);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		/**
		 * Fill Values data by reading ObjectInputStream.
		 */
		public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
			try {

				int length = 0;

				length = dis.readByte();
				if (length == -1) {
					this.Revenue_Total = null;
				} else {
					this.Revenue_Total = dis.readDouble();
				}

				this.N_Purchases = readInteger(dis, ois);

				this.Purchase_DATE = readDate(dis, ois);

				length = dis.readByte();
				if (length == -1) {
					this.Purchase_VALUE = null;
				} else {
					this.Purchase_VALUE = dis.readFloat();
				}

				this.Pay_Method = readString(dis, ois);

				this.Most_Purchased = readString(dis, ois);

			} catch (IOException e) {
				throw new RuntimeException(e);

			}

		}

		public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
			try {
				int length = 0;

				length = objectIn.readByte();
				if (length == -1) {
					this.Revenue_Total = null;
				} else {
					this.Revenue_Total = objectIn.readDouble();
				}

				this.N_Purchases = readInteger(dis, objectIn);

				this.Purchase_DATE = readDate(dis, objectIn);

				length = objectIn.readByte();
				if (length == -1) {
					this.Purchase_VALUE = null;
				} else {
					this.Purchase_VALUE = objectIn.readFloat();
				}

				this.Pay_Method = readString(dis, objectIn);

				this.Most_Purchased = readString(dis, objectIn);

			} catch (IOException e) {
				throw new RuntimeException(e);

			}

		}

		/**
		 * Return a byte array which represents Values data.
		 */
		public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
			try {

				if (this.Revenue_Total == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeDouble(this.Revenue_Total);
				}

				writeInteger(this.N_Purchases, dos, oos);

				writeDate(this.Purchase_DATE, dos, oos);

				if (this.Purchase_VALUE == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Purchase_VALUE);
				}

				writeString(this.Pay_Method, dos, oos);

				writeString(this.Most_Purchased, dos, oos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut) {
			try {

				if (this.Revenue_Total == null) {
					objectOut.writeByte(-1);
				} else {
					objectOut.writeByte(0);
					objectOut.writeDouble(this.Revenue_Total);
				}

				writeInteger(this.N_Purchases, dos, objectOut);

				writeDate(this.Purchase_DATE, dos, objectOut);

				if (this.Purchase_VALUE == null) {
					objectOut.writeByte(-1);
				} else {
					objectOut.writeByte(0);
					objectOut.writeFloat(this.Purchase_VALUE);
				}

				writeString(this.Pay_Method, dos, objectOut);

				writeString(this.Most_Purchased, dos, objectOut);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}
		}

		public boolean supportMarshaller() {
			return true;
		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Customer_id=" + String.valueOf(Customer_id));
			sb.append(",Revenue_Total=" + String.valueOf(Revenue_Total));
			sb.append(",N_Purchases=" + String.valueOf(N_Purchases));
			sb.append(",Purchase_DATE=" + String.valueOf(Purchase_DATE));
			sb.append(",Purchase_VALUE=" + String.valueOf(Purchase_VALUE));
			sb.append(",Pay_Method=" + Pay_Method);
			sb.append(",Most_Purchased=" + Most_Purchased);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(CustSalesStruct other) {

			int returnValue = -1;

			returnValue = checkNullsAndCompare(this.Customer_id, other.Customer_id);
			if (returnValue != 0) {
				return returnValue;
			}

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class CustSalesInputStruct implements routines.system.IPersistableRow<CustSalesInputStruct> {
		final static byte[] commonByteArrayLock_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis = new byte[0];
		static byte[] commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis = new byte[0];
		protected static final int DEFAULT_HASHCODE = 1;
		protected static final int PRIME = 31;
		protected int hashCode = DEFAULT_HASHCODE;
		public boolean hashCodeDirty = true;

		public String loopKey;

		public int Customer_id;

		public int getCustomer_id() {
			return this.Customer_id;
		}

		public Double Revenue_Total;

		public Double getRevenue_Total() {
			return this.Revenue_Total;
		}

		public Integer N_Purchases;

		public Integer getN_Purchases() {
			return this.N_Purchases;
		}

		public java.util.Date Purchase_DATE;

		public java.util.Date getPurchase_DATE() {
			return this.Purchase_DATE;
		}

		public Float Purchase_VALUE;

		public Float getPurchase_VALUE() {
			return this.Purchase_VALUE;
		}

		public String Pay_Method;

		public String getPay_Method() {
			return this.Pay_Method;
		}

		public String Most_Purchased;

		public String getMost_Purchased() {
			return this.Most_Purchased;
		}

		@Override
		public int hashCode() {
			if (this.hashCodeDirty) {
				final int prime = PRIME;
				int result = DEFAULT_HASHCODE;

				result = prime * result + (int) this.Customer_id;

				this.hashCode = result;
				this.hashCodeDirty = false;
			}
			return this.hashCode;
		}

		@Override
		public boolean equals(Object obj) {
			if (this == obj)
				return true;
			if (obj == null)
				return false;
			if (getClass() != obj.getClass())
				return false;
			final CustSalesInputStruct other = (CustSalesInputStruct) obj;

			if (this.Customer_id != other.Customer_id)
				return false;

			return true;
		}

		public void copyDataTo(CustSalesInputStruct other) {

			other.Customer_id = this.Customer_id;
			other.Revenue_Total = this.Revenue_Total;
			other.N_Purchases = this.N_Purchases;
			other.Purchase_DATE = this.Purchase_DATE;
			other.Purchase_VALUE = this.Purchase_VALUE;
			other.Pay_Method = this.Pay_Method;
			other.Most_Purchased = this.Most_Purchased;

		}

		public void copyKeysDataTo(CustSalesInputStruct other) {

			other.Customer_id = this.Customer_id;

		}

		private Integer readInteger(ObjectInputStream dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (intNum == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeInt(intNum);
			}
		}

		private java.util.Date readDate(ObjectInputStream dis) throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(dis.readLong());
			}
			return dateReturn;
		}

		private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = unmarshaller.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(unmarshaller.readLong());
			}
			return dateReturn;
		}

		private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException {
			if (date1 == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeLong(date1.getTime());
			}
		}

		private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (date1 == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeLong(date1.getTime());
			}
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis.length) {
					if (length < 1024 && commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis.length == 0) {
						commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis = new byte[1024];
					} else {
						commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis, 0, length);
				strReturn = new String(commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis, 0, length,
						utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis.length) {
					if (length < 1024 && commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis.length == 0) {
						commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis = new byte[1024];
					} else {
						commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis, 0, length);
				strReturn = new String(commonByteArray_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis, 0, length,
						utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis) {

				try {

					int length = 0;

					this.Customer_id = dis.readInt();

					length = dis.readByte();
					if (length == -1) {
						this.Revenue_Total = null;
					} else {
						this.Revenue_Total = dis.readDouble();
					}

					this.N_Purchases = readInteger(dis);

					this.Purchase_DATE = readDate(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Purchase_VALUE = null;
					} else {
						this.Purchase_VALUE = dis.readFloat();
					}

					this.Pay_Method = readString(dis);

					this.Most_Purchased = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_WQD7005_ALT_ASSTMNT_ECommerce_Customer_Analysis) {

				try {

					int length = 0;

					this.Customer_id = dis.readInt();

					length = dis.readByte();
					if (length == -1) {
						this.Revenue_Total = null;
					} else {
						this.Revenue_Total = dis.readDouble();
					}

					this.N_Purchases = readInteger(dis);

					this.Purchase_DATE = readDate(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Purchase_VALUE = null;
					} else {
						this.Purchase_VALUE = dis.readFloat();
					}

					this.Pay_Method = readString(dis);

					this.Most_Purchased = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// int

				dos.writeInt(this.Customer_id);

				// Double

				if (this.Revenue_Total == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeDouble(this.Revenue_Total);
				}

				// Integer

				writeInteger(this.N_Purchases, dos);

				// java.util.Date

				writeDate(this.Purchase_DATE, dos);

				// Float

				if (this.Purchase_VALUE == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Purchase_VALUE);
				}

				// String

				writeString(this.Pay_Method, dos);

				// String

				writeString(this.Most_Purchased, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// int

				dos.writeInt(this.Customer_id);

				// Double

				if (this.Revenue_Total == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeDouble(this.Revenue_Total);
				}

				// Integer

				writeInteger(this.N_Purchases, dos);

				// java.util.Date

				writeDate(this.Purchase_DATE, dos);

				// Float

				if (this.Purchase_VALUE == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Purchase_VALUE);
				}

				// String

				writeString(this.Pay_Method, dos);

				// String

				writeString(this.Most_Purchased, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Customer_id=" + String.valueOf(Customer_id));
			sb.append(",Revenue_Total=" + String.valueOf(Revenue_Total));
			sb.append(",N_Purchases=" + String.valueOf(N_Purchases));
			sb.append(",Purchase_DATE=" + String.valueOf(Purchase_DATE));
			sb.append(",Purchase_VALUE=" + String.valueOf(Purchase_VALUE));
			sb.append(",Pay_Method=" + Pay_Method);
			sb.append(",Most_Purchased=" + Most_Purchased);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(CustSalesInputStruct other) {

			int returnValue = -1;

			returnValue = checkNullsAndCompare(this.Customer_id, other.Customer_id);
			if (returnValue != 0) {
				return returnValue;
			}

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public void tFileInputDelimited_4Process(final java.util.Map<String, Object> globalMap) throws TalendException {
		globalMap.put("tFileInputDelimited_4_SUBPROCESS_STATE", 0);

		final boolean execStat = this.execStat;

		String iterateId = "";

		String currentComponent = "";
		java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

		try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { // start the resume
				globalResumeTicket = true;

				CustSalesInputStruct CustSalesInput = new CustSalesInputStruct();
				CustSalesInputStruct CustSales = CustSalesInput;

				/**
				 * [tAdvancedHash_CustSales begin ] start
				 */

				ok_Hash.put("tAdvancedHash_CustSales", false);
				start_Hash.put("tAdvancedHash_CustSales", System.currentTimeMillis());

				currentComponent = "tAdvancedHash_CustSales";

				int tos_count_tAdvancedHash_CustSales = 0;

				// connection name:CustSales
				// source node:tLogRow_3 - inputs:(CustSalesInput) outputs:(CustSales,CustSales)
				// | target node:tAdvancedHash_CustSales - inputs:(CustSales) outputs:()
				// linked node: tMap_1 - inputs:(CustDetails,CustLog,CustSales)
				// outputs:(CustInfoMerge)

				org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_CustSales = org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;

				org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<CustSalesStruct> tHash_Lookup_CustSales = org.talend.designer.components.lookup.memory.AdvancedMemoryLookup
						.<CustSalesStruct>getLookup(matchingModeEnum_CustSales);

				globalMap.put("tHash_Lookup_CustSales", tHash_Lookup_CustSales);

				/**
				 * [tAdvancedHash_CustSales begin ] stop
				 */

				/**
				 * [tLogRow_3 begin ] start
				 */

				ok_Hash.put("tLogRow_3", false);
				start_Hash.put("tLogRow_3", System.currentTimeMillis());

				currentComponent = "tLogRow_3";

				int tos_count_tLogRow_3 = 0;

				///////////////////////

				final String OUTPUT_FIELD_SEPARATOR_tLogRow_3 = "|";
				java.io.PrintStream consoleOut_tLogRow_3 = null;

				StringBuilder strBuffer_tLogRow_3 = null;
				int nb_line_tLogRow_3 = 0;
///////////////////////    			

				/**
				 * [tLogRow_3 begin ] stop
				 */

				/**
				 * [tFileInputDelimited_4 begin ] start
				 */

				ok_Hash.put("tFileInputDelimited_4", false);
				start_Hash.put("tFileInputDelimited_4", System.currentTimeMillis());

				currentComponent = "tFileInputDelimited_4";

				int tos_count_tFileInputDelimited_4 = 0;

				final routines.system.RowState rowstate_tFileInputDelimited_4 = new routines.system.RowState();

				int nb_line_tFileInputDelimited_4 = 0;
				org.talend.fileprocess.FileInputDelimited fid_tFileInputDelimited_4 = null;
				int limit_tFileInputDelimited_4 = -1;
				try {

					Object filename_tFileInputDelimited_4 = "D:/Documents/UM - Master/Sem 3/WQD7005 Data Mining/AA1/CustSales.csv";
					if (filename_tFileInputDelimited_4 instanceof java.io.InputStream) {

						int footer_value_tFileInputDelimited_4 = 0, random_value_tFileInputDelimited_4 = -1;
						if (footer_value_tFileInputDelimited_4 > 0 || random_value_tFileInputDelimited_4 > 0) {
							throw new java.lang.Exception(
									"When the input source is a stream,footer and random shouldn't be bigger than 0.");
						}

					}
					try {
						fid_tFileInputDelimited_4 = new org.talend.fileprocess.FileInputDelimited(
								"D:/Documents/UM - Master/Sem 3/WQD7005 Data Mining/AA1/CustSales.csv", "ISO-8859-15",
								",", "\n", true, 0, 0, limit_tFileInputDelimited_4, -1, false);
					} catch (java.lang.Exception e) {
						globalMap.put("tFileInputDelimited_4_ERROR_MESSAGE", e.getMessage());

						System.err.println(e.getMessage());

					}

					while (fid_tFileInputDelimited_4 != null && fid_tFileInputDelimited_4.nextRecord()) {
						rowstate_tFileInputDelimited_4.reset();

						CustSalesInput = null;

						boolean whetherReject_tFileInputDelimited_4 = false;
						CustSalesInput = new CustSalesInputStruct();
						try {

							int columnIndexWithD_tFileInputDelimited_4 = 0;

							String temp = "";

							columnIndexWithD_tFileInputDelimited_4 = 0;

							temp = fid_tFileInputDelimited_4.get(columnIndexWithD_tFileInputDelimited_4);
							if (temp.length() > 0) {

								try {

									CustSalesInput.Customer_id = ParserUtils.parseTo_int(temp);

								} catch (java.lang.Exception ex_tFileInputDelimited_4) {
									globalMap.put("tFileInputDelimited_4_ERROR_MESSAGE",
											ex_tFileInputDelimited_4.getMessage());
									rowstate_tFileInputDelimited_4.setException(new RuntimeException(String.format(
											"Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
											"Customer_id", "CustSalesInput", temp, ex_tFileInputDelimited_4),
											ex_tFileInputDelimited_4));
								}

							} else {

								rowstate_tFileInputDelimited_4.setException(new RuntimeException(
										"Value is empty for column : 'Customer_id' in 'CustSalesInput' connection, value is invalid or this column should be nullable or have a default value."));

							}

							columnIndexWithD_tFileInputDelimited_4 = 1;

							temp = fid_tFileInputDelimited_4.get(columnIndexWithD_tFileInputDelimited_4);
							if (temp.length() > 0) {

								try {

									CustSalesInput.Revenue_Total = ParserUtils.parseTo_Double(temp);

								} catch (java.lang.Exception ex_tFileInputDelimited_4) {
									globalMap.put("tFileInputDelimited_4_ERROR_MESSAGE",
											ex_tFileInputDelimited_4.getMessage());
									rowstate_tFileInputDelimited_4.setException(new RuntimeException(String.format(
											"Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
											"Revenue_Total", "CustSalesInput", temp, ex_tFileInputDelimited_4),
											ex_tFileInputDelimited_4));
								}

							} else {

								CustSalesInput.Revenue_Total = null;

							}

							columnIndexWithD_tFileInputDelimited_4 = 2;

							temp = fid_tFileInputDelimited_4.get(columnIndexWithD_tFileInputDelimited_4);
							if (temp.length() > 0) {

								try {

									CustSalesInput.N_Purchases = ParserUtils.parseTo_Integer(temp);

								} catch (java.lang.Exception ex_tFileInputDelimited_4) {
									globalMap.put("tFileInputDelimited_4_ERROR_MESSAGE",
											ex_tFileInputDelimited_4.getMessage());
									rowstate_tFileInputDelimited_4.setException(new RuntimeException(String.format(
											"Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
											"N_Purchases", "CustSalesInput", temp, ex_tFileInputDelimited_4),
											ex_tFileInputDelimited_4));
								}

							} else {

								CustSalesInput.N_Purchases = null;

							}

							columnIndexWithD_tFileInputDelimited_4 = 3;

							temp = fid_tFileInputDelimited_4.get(columnIndexWithD_tFileInputDelimited_4);
							if (temp.length() > 0) {

								try {

									CustSalesInput.Purchase_DATE = ParserUtils.parseTo_Date(temp, "dd.MM.yyyy");

								} catch (java.lang.Exception ex_tFileInputDelimited_4) {
									globalMap.put("tFileInputDelimited_4_ERROR_MESSAGE",
											ex_tFileInputDelimited_4.getMessage());
									rowstate_tFileInputDelimited_4.setException(new RuntimeException(String.format(
											"Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
											"Purchase_DATE", "CustSalesInput", temp, ex_tFileInputDelimited_4),
											ex_tFileInputDelimited_4));
								}

							} else {

								CustSalesInput.Purchase_DATE = null;

							}

							columnIndexWithD_tFileInputDelimited_4 = 4;

							temp = fid_tFileInputDelimited_4.get(columnIndexWithD_tFileInputDelimited_4);
							if (temp.length() > 0) {

								try {

									CustSalesInput.Purchase_VALUE = ParserUtils.parseTo_Float(temp);

								} catch (java.lang.Exception ex_tFileInputDelimited_4) {
									globalMap.put("tFileInputDelimited_4_ERROR_MESSAGE",
											ex_tFileInputDelimited_4.getMessage());
									rowstate_tFileInputDelimited_4.setException(new RuntimeException(String.format(
											"Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
											"Purchase_VALUE", "CustSalesInput", temp, ex_tFileInputDelimited_4),
											ex_tFileInputDelimited_4));
								}

							} else {

								CustSalesInput.Purchase_VALUE = null;

							}

							columnIndexWithD_tFileInputDelimited_4 = 5;

							CustSalesInput.Pay_Method = fid_tFileInputDelimited_4
									.get(columnIndexWithD_tFileInputDelimited_4);

							columnIndexWithD_tFileInputDelimited_4 = 6;

							CustSalesInput.Most_Purchased = fid_tFileInputDelimited_4
									.get(columnIndexWithD_tFileInputDelimited_4);

							if (rowstate_tFileInputDelimited_4.getException() != null) {
								throw rowstate_tFileInputDelimited_4.getException();
							}

						} catch (java.lang.Exception e) {
							globalMap.put("tFileInputDelimited_4_ERROR_MESSAGE", e.getMessage());
							whetherReject_tFileInputDelimited_4 = true;

							System.err.println(e.getMessage());
							CustSalesInput = null;

						}

						/**
						 * [tFileInputDelimited_4 begin ] stop
						 */

						/**
						 * [tFileInputDelimited_4 main ] start
						 */

						currentComponent = "tFileInputDelimited_4";

						tos_count_tFileInputDelimited_4++;

						/**
						 * [tFileInputDelimited_4 main ] stop
						 */

						/**
						 * [tFileInputDelimited_4 process_data_begin ] start
						 */

						currentComponent = "tFileInputDelimited_4";

						/**
						 * [tFileInputDelimited_4 process_data_begin ] stop
						 */
// Start of branch "CustSalesInput"
						if (CustSalesInput != null) {

							/**
							 * [tLogRow_3 main ] start
							 */

							currentComponent = "tLogRow_3";

///////////////////////		

							strBuffer_tLogRow_3 = new StringBuilder();

							strBuffer_tLogRow_3.append(String.valueOf(CustSalesInput.Customer_id));

							strBuffer_tLogRow_3.append("|");

							if (CustSalesInput.Revenue_Total != null) { //

								strBuffer_tLogRow_3.append(FormatterUtils.formatUnwithE(CustSalesInput.Revenue_Total));

							} //

							strBuffer_tLogRow_3.append("|");

							if (CustSalesInput.N_Purchases != null) { //

								strBuffer_tLogRow_3.append(String.valueOf(CustSalesInput.N_Purchases));

							} //

							strBuffer_tLogRow_3.append("|");

							if (CustSalesInput.Purchase_DATE != null) { //

								strBuffer_tLogRow_3
										.append(FormatterUtils.format_Date(CustSalesInput.Purchase_DATE, "dd.MM.yyyy"));

							} //

							strBuffer_tLogRow_3.append("|");

							if (CustSalesInput.Purchase_VALUE != null) { //

								strBuffer_tLogRow_3.append(FormatterUtils.formatUnwithE(CustSalesInput.Purchase_VALUE));

							} //

							strBuffer_tLogRow_3.append("|");

							if (CustSalesInput.Pay_Method != null) { //

								strBuffer_tLogRow_3.append(String.valueOf(CustSalesInput.Pay_Method));

							} //

							strBuffer_tLogRow_3.append("|");

							if (CustSalesInput.Most_Purchased != null) { //

								strBuffer_tLogRow_3.append(String.valueOf(CustSalesInput.Most_Purchased));

							} //

							if (globalMap.get("tLogRow_CONSOLE") != null) {
								consoleOut_tLogRow_3 = (java.io.PrintStream) globalMap.get("tLogRow_CONSOLE");
							} else {
								consoleOut_tLogRow_3 = new java.io.PrintStream(
										new java.io.BufferedOutputStream(System.out));
								globalMap.put("tLogRow_CONSOLE", consoleOut_tLogRow_3);
							}
							consoleOut_tLogRow_3.println(strBuffer_tLogRow_3.toString());
							consoleOut_tLogRow_3.flush();
							nb_line_tLogRow_3++;
//////

//////                    

///////////////////////    			

							CustSales = CustSalesInput;

							tos_count_tLogRow_3++;

							/**
							 * [tLogRow_3 main ] stop
							 */

							/**
							 * [tLogRow_3 process_data_begin ] start
							 */

							currentComponent = "tLogRow_3";

							/**
							 * [tLogRow_3 process_data_begin ] stop
							 */

							/**
							 * [tAdvancedHash_CustSales main ] start
							 */

							currentComponent = "tAdvancedHash_CustSales";

							CustSalesStruct CustSales_HashRow = new CustSalesStruct();

							CustSales_HashRow.Customer_id = CustSales.Customer_id;

							CustSales_HashRow.Revenue_Total = CustSales.Revenue_Total;

							CustSales_HashRow.N_Purchases = CustSales.N_Purchases;

							CustSales_HashRow.Purchase_DATE = CustSales.Purchase_DATE;

							CustSales_HashRow.Purchase_VALUE = CustSales.Purchase_VALUE;

							CustSales_HashRow.Pay_Method = CustSales.Pay_Method;

							CustSales_HashRow.Most_Purchased = CustSales.Most_Purchased;

							tHash_Lookup_CustSales.put(CustSales_HashRow);

							tos_count_tAdvancedHash_CustSales++;

							/**
							 * [tAdvancedHash_CustSales main ] stop
							 */

							/**
							 * [tAdvancedHash_CustSales process_data_begin ] start
							 */

							currentComponent = "tAdvancedHash_CustSales";

							/**
							 * [tAdvancedHash_CustSales process_data_begin ] stop
							 */

							/**
							 * [tAdvancedHash_CustSales process_data_end ] start
							 */

							currentComponent = "tAdvancedHash_CustSales";

							/**
							 * [tAdvancedHash_CustSales process_data_end ] stop
							 */

							/**
							 * [tLogRow_3 process_data_end ] start
							 */

							currentComponent = "tLogRow_3";

							/**
							 * [tLogRow_3 process_data_end ] stop
							 */

						} // End of branch "CustSalesInput"

						/**
						 * [tFileInputDelimited_4 process_data_end ] start
						 */

						currentComponent = "tFileInputDelimited_4";

						/**
						 * [tFileInputDelimited_4 process_data_end ] stop
						 */

						/**
						 * [tFileInputDelimited_4 end ] start
						 */

						currentComponent = "tFileInputDelimited_4";

					}
				} finally {
					if (!((Object) ("D:/Documents/UM - Master/Sem 3/WQD7005 Data Mining/AA1/CustSales.csv") instanceof java.io.InputStream)) {
						if (fid_tFileInputDelimited_4 != null) {
							fid_tFileInputDelimited_4.close();
						}
					}
					if (fid_tFileInputDelimited_4 != null) {
						globalMap.put("tFileInputDelimited_4_NB_LINE", fid_tFileInputDelimited_4.getRowNumber());

					}
				}

				ok_Hash.put("tFileInputDelimited_4", true);
				end_Hash.put("tFileInputDelimited_4", System.currentTimeMillis());

				/**
				 * [tFileInputDelimited_4 end ] stop
				 */

				/**
				 * [tLogRow_3 end ] start
				 */

				currentComponent = "tLogRow_3";

//////
//////
				globalMap.put("tLogRow_3_NB_LINE", nb_line_tLogRow_3);

///////////////////////    			

				ok_Hash.put("tLogRow_3", true);
				end_Hash.put("tLogRow_3", System.currentTimeMillis());

				/**
				 * [tLogRow_3 end ] stop
				 */

				/**
				 * [tAdvancedHash_CustSales end ] start
				 */

				currentComponent = "tAdvancedHash_CustSales";

				tHash_Lookup_CustSales.endPut();

				ok_Hash.put("tAdvancedHash_CustSales", true);
				end_Hash.put("tAdvancedHash_CustSales", System.currentTimeMillis());

				/**
				 * [tAdvancedHash_CustSales end ] stop
				 */

			} // end the resume

		} catch (java.lang.Exception e) {

			TalendException te = new TalendException(e, currentComponent, globalMap);

			throw te;
		} catch (java.lang.Error error) {

			throw error;
		} finally {

			try {

				/**
				 * [tFileInputDelimited_4 finally ] start
				 */

				currentComponent = "tFileInputDelimited_4";

				/**
				 * [tFileInputDelimited_4 finally ] stop
				 */

				/**
				 * [tLogRow_3 finally ] start
				 */

				currentComponent = "tLogRow_3";

				/**
				 * [tLogRow_3 finally ] stop
				 */

				/**
				 * [tAdvancedHash_CustSales finally ] start
				 */

				currentComponent = "tAdvancedHash_CustSales";

				/**
				 * [tAdvancedHash_CustSales finally ] stop
				 */

			} catch (java.lang.Exception e) {
				// ignore
			} catch (java.lang.Error error) {
				// ignore
			}
			resourceMap = null;
		}

		globalMap.put("tFileInputDelimited_4_SUBPROCESS_STATE", 1);
	}

	public String resuming_logs_dir_path = null;
	public String resuming_checkpoint_path = null;
	public String parent_part_launcher = null;
	private String resumeEntryMethodName = null;
	private boolean globalResumeTicket = false;

	public boolean watch = false;
	// portStats is null, it means don't execute the statistics
	public Integer portStats = null;
	public int portTraces = 4334;
	public String clientHost;
	public String defaultClientHost = "localhost";
	public String contextStr = "Default";
	public boolean isDefaultContext = true;
	public String pid = "0";
	public String rootPid = null;
	public String fatherPid = null;
	public String fatherNode = null;
	public long startTime = 0;
	public boolean isChildJob = false;
	public String log4jLevel = "";

	private boolean enableLogStash;

	private boolean execStat = true;

	private ThreadLocal<java.util.Map<String, String>> threadLocal = new ThreadLocal<java.util.Map<String, String>>() {
		protected java.util.Map<String, String> initialValue() {
			java.util.Map<String, String> threadRunResultMap = new java.util.HashMap<String, String>();
			threadRunResultMap.put("errorCode", null);
			threadRunResultMap.put("status", "");
			return threadRunResultMap;
		};
	};

	protected PropertiesWithType context_param = new PropertiesWithType();
	public java.util.Map<String, Object> parentContextMap = new java.util.HashMap<String, Object>();

	public String status = "";

	public static void main(String[] args) {
		final ECommerce_Customer_Analysis ECommerce_Customer_AnalysisClass = new ECommerce_Customer_Analysis();

		int exitCode = ECommerce_Customer_AnalysisClass.runJobInTOS(args);

		System.exit(exitCode);
	}

	public String[][] runJob(String[] args) {

		int exitCode = runJobInTOS(args);
		String[][] bufferValue = new String[][] { { Integer.toString(exitCode) } };

		return bufferValue;
	}

	public boolean hastBufferOutputComponent() {
		boolean hastBufferOutput = false;

		return hastBufferOutput;
	}

	public int runJobInTOS(String[] args) {
		// reset status
		status = "";

		String lastStr = "";
		for (String arg : args) {
			if (arg.equalsIgnoreCase("--context_param")) {
				lastStr = arg;
			} else if (lastStr.equals("")) {
				evalParam(arg);
			} else {
				evalParam(lastStr + " " + arg);
				lastStr = "";
			}
		}
		enableLogStash = "true".equalsIgnoreCase(System.getProperty("audit.enabled"));

		if (clientHost == null) {
			clientHost = defaultClientHost;
		}

		if (pid == null || "0".equals(pid)) {
			pid = TalendString.getAsciiRandomString(6);
		}

		if (rootPid == null) {
			rootPid = pid;
		}
		if (fatherPid == null) {
			fatherPid = pid;
		} else {
			isChildJob = true;
		}

		boolean inOSGi = routines.system.BundleUtils.inOSGi();

		if (inOSGi) {
			java.util.Dictionary<String, Object> jobProperties = routines.system.BundleUtils.getJobProperties(jobName);

			if (jobProperties != null && jobProperties.get("context") != null) {
				contextStr = (String) jobProperties.get("context");
			}
		}

		try {
			// call job/subjob with an existing context, like: --context=production. if
			// without this parameter, there will use the default context instead.
			java.io.InputStream inContext = ECommerce_Customer_Analysis.class.getClassLoader().getResourceAsStream(
					"wqd7005_alt_asstmnt/ecommerce_customer_analysis_0_1/contexts/" + contextStr + ".properties");
			if (inContext == null) {
				inContext = ECommerce_Customer_Analysis.class.getClassLoader()
						.getResourceAsStream("config/contexts/" + contextStr + ".properties");
			}
			if (inContext != null) {
				try {
					// defaultProps is in order to keep the original context value
					if (context != null && context.isEmpty()) {
						defaultProps.load(inContext);
						context = new ContextProperties(defaultProps);
					}
				} finally {
					inContext.close();
				}
			} else if (!isDefaultContext) {
				// print info and job continue to run, for case: context_param is not empty.
				System.err.println("Could not find the context " + contextStr);
			}

			if (!context_param.isEmpty()) {
				context.putAll(context_param);
				// set types for params from parentJobs
				for (Object key : context_param.keySet()) {
					String context_key = key.toString();
					String context_type = context_param.getContextType(context_key);
					context.setContextType(context_key, context_type);

				}
			}
			class ContextProcessing {
				private void processContext_0() {
				}

				public void processAllContext() {
					processContext_0();
				}
			}

			new ContextProcessing().processAllContext();
		} catch (java.io.IOException ie) {
			System.err.println("Could not load context " + contextStr);
			ie.printStackTrace();
		}

		// get context value from parent directly
		if (parentContextMap != null && !parentContextMap.isEmpty()) {
		}

		// Resume: init the resumeUtil
		resumeEntryMethodName = ResumeUtil.getResumeEntryMethodName(resuming_checkpoint_path);
		resumeUtil = new ResumeUtil(resuming_logs_dir_path, isChildJob, rootPid);
		resumeUtil.initCommonInfo(pid, rootPid, fatherPid, projectName, jobName, contextStr, jobVersion);

		List<String> parametersToEncrypt = new java.util.ArrayList<String>();
		// Resume: jobStart
		resumeUtil.addLog("JOB_STARTED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "",
				"", "", "", "", resumeUtil.convertToJsonText(context, parametersToEncrypt));

		java.util.concurrent.ConcurrentHashMap<Object, Object> concurrentHashMap = new java.util.concurrent.ConcurrentHashMap<Object, Object>();
		globalMap.put("concurrentHashMap", concurrentHashMap);

		long startUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
		long endUsedMemory = 0;
		long end = 0;

		startTime = System.currentTimeMillis();

		this.globalResumeTicket = true;// to run tPreJob

		this.globalResumeTicket = false;// to run others jobs

		try {
			errorCode = null;
			tFileInputDelimited_1Process(globalMap);
			if (!"failure".equals(status)) {
				status = "end";
			}
		} catch (TalendException e_tFileInputDelimited_1) {
			globalMap.put("tFileInputDelimited_1_SUBPROCESS_STATE", -1);

			e_tFileInputDelimited_1.printStackTrace();

		}

		this.globalResumeTicket = true;// to run tPostJob

		end = System.currentTimeMillis();

		if (watch) {
			System.out.println((end - startTime) + " milliseconds");
		}

		endUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
		if (false) {
			System.out.println((endUsedMemory - startUsedMemory)
					+ " bytes memory increase when running : ECommerce_Customer_Analysis");
		}

		int returnCode = 0;

		if (errorCode == null) {
			returnCode = status != null && status.equals("failure") ? 1 : 0;
		} else {
			returnCode = errorCode.intValue();
		}
		resumeUtil.addLog("JOB_ENDED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "",
				"" + returnCode, "", "", "");

		return returnCode;

	}

	// only for OSGi env
	public void destroy() {

	}

	private java.util.Map<String, Object> getSharedConnections4REST() {
		java.util.Map<String, Object> connections = new java.util.HashMap<String, Object>();

		return connections;
	}

	private void evalParam(String arg) {
		if (arg.startsWith("--resuming_logs_dir_path")) {
			resuming_logs_dir_path = arg.substring(25);
		} else if (arg.startsWith("--resuming_checkpoint_path")) {
			resuming_checkpoint_path = arg.substring(27);
		} else if (arg.startsWith("--parent_part_launcher")) {
			parent_part_launcher = arg.substring(23);
		} else if (arg.startsWith("--watch")) {
			watch = true;
		} else if (arg.startsWith("--stat_port=")) {
			String portStatsStr = arg.substring(12);
			if (portStatsStr != null && !portStatsStr.equals("null")) {
				portStats = Integer.parseInt(portStatsStr);
			}
		} else if (arg.startsWith("--trace_port=")) {
			portTraces = Integer.parseInt(arg.substring(13));
		} else if (arg.startsWith("--client_host=")) {
			clientHost = arg.substring(14);
		} else if (arg.startsWith("--context=")) {
			contextStr = arg.substring(10);
			isDefaultContext = false;
		} else if (arg.startsWith("--father_pid=")) {
			fatherPid = arg.substring(13);
		} else if (arg.startsWith("--root_pid=")) {
			rootPid = arg.substring(11);
		} else if (arg.startsWith("--father_node=")) {
			fatherNode = arg.substring(14);
		} else if (arg.startsWith("--pid=")) {
			pid = arg.substring(6);
		} else if (arg.startsWith("--context_type")) {
			String keyValue = arg.substring(15);
			int index = -1;
			if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
				if (fatherPid == null) {
					context_param.setContextType(keyValue.substring(0, index),
							replaceEscapeChars(keyValue.substring(index + 1)));
				} else { // the subjob won't escape the especial chars
					context_param.setContextType(keyValue.substring(0, index), keyValue.substring(index + 1));
				}

			}

		} else if (arg.startsWith("--context_param")) {
			String keyValue = arg.substring(16);
			int index = -1;
			if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
				if (fatherPid == null) {
					context_param.put(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
				} else { // the subjob won't escape the especial chars
					context_param.put(keyValue.substring(0, index), keyValue.substring(index + 1));
				}
			}
		} else if (arg.startsWith("--log4jLevel=")) {
			log4jLevel = arg.substring(13);
		} else if (arg.startsWith("--audit.enabled") && arg.contains("=")) {// for trunjob call
			final int equal = arg.indexOf('=');
			final String key = arg.substring("--".length(), equal);
			System.setProperty(key, arg.substring(equal + 1));
		}
	}

	private static final String NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY = "<TALEND_NULL>";

	private final String[][] escapeChars = { { "\\\\", "\\" }, { "\\n", "\n" }, { "\\'", "\'" }, { "\\r", "\r" },
			{ "\\f", "\f" }, { "\\b", "\b" }, { "\\t", "\t" } };

	private String replaceEscapeChars(String keyValue) {

		if (keyValue == null || ("").equals(keyValue.trim())) {
			return keyValue;
		}

		StringBuilder result = new StringBuilder();
		int currIndex = 0;
		while (currIndex < keyValue.length()) {
			int index = -1;
			// judege if the left string includes escape chars
			for (String[] strArray : escapeChars) {
				index = keyValue.indexOf(strArray[0], currIndex);
				if (index >= 0) {

					result.append(keyValue.substring(currIndex, index + strArray[0].length()).replace(strArray[0],
							strArray[1]));
					currIndex = index + strArray[0].length();
					break;
				}
			}
			// if the left string doesn't include escape chars, append the left into the
			// result
			if (index < 0) {
				result.append(keyValue.substring(currIndex));
				currIndex = currIndex + keyValue.length();
			}
		}

		return result.toString();
	}

	public Integer getErrorCode() {
		return errorCode;
	}

	public String getStatus() {
		return status;
	}

	ResumeUtil resumeUtil = null;
}
/************************************************************************************************
 * 227697 characters generated by Talend Open Studio for Data Integration on the
 * 8 January 2024 at 7:07:07 pm MYT
 ************************************************************************************************/